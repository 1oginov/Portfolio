{"version":3,"sources":["Stocks/enhancers/withStockQuotesUpdater.js","Portfolio/components/CreatePositionForm/CreatePositionForm.js","Portfolio/components/CreatePositionForm/CreatePositionForm.enhancer.js","Portfolio/actions/index.js","constants.js","Portfolio/actions/types.js","Portfolio/components/CreatePositionForm/index.js","App/views/CreatePosition/CreatePosition.js","App/enhancers/withNavigationHandlers.js","App/actions/index.js","App/actions/types.js","App/views/CreatePosition/index.js","App/views/CreatePosition/CreatePosition.enhancer.js","App/routes.js","Shared/components/Progress/index.js","Shared/components/Progress/Progress.js","Portfolio/components/PositionItem/PositionItem.js","Portfolio/components/PositionItem/index.js","Portfolio/components/PositionItem/PositionItem.enhancer.js","Stocks/components/Stock/Stock.js","Stocks/lib/IEX/instance.js","Stocks/lib/IEX/IEX.js","Stocks/actions/index.js","Stocks/enhancers/withStockLogoBySymbol.js","Stocks/enhancers/withStockQuoteBySymbol.js","Stocks/lib/stocks/index.js","Stocks/components/Stock/index.js","Stocks/components/Stock/Stock.enhancer.js","App/components/StockPositionItem/index.js","App/components/StockPositionItem/StockPositionItem.js","App/components/StockPositionsList/index.js","App/components/StockPositionsList/StockPositionsList.js","App/components/StockPositionsValue/StockPositionsValue.js","Stocks/enhancers/withStockQuotesBySymbols.js","Shared/lib/utils/index.js","App/components/StockPositionsValue/index.js","App/components/StockPositionsValue/StockPositionsValue.enhancer.js","Portfolio/lib/portfolio/index.js","App/views/Home/Home.js","User/enhancers/withAuth.js","Portfolio/enhancers/withPositionsArray.js","Portfolio/enhancers/withPositions.js","Shared/lib/transform/index.js","App/views/Home/index.js","App/views/Home/Home.enhancer.js","App/views/Position/Position.js","Portfolio/enhancers/withPositionById.js","App/enhancers/withRouteParams.js","App/views/Position/Position.enhancer.js","App/views/Position/index.js","User/components/LogoutButton/LogoutButton.js","User/components/LogoutButton/index.js","User/components/LogoutButton/LogoutButton.enhancer.js","App/views/Profile/Profile.js","App/views/Profile/index.js","App/views/Profile/Profile.enhancer.js","App/components/Navigation/Navigation.js","App/components/Navigation/index.js","App/components/Navigation/Navigation.enhancer.js","User/components/ProviderLoginButton/ProviderLoginButton.js","User/components/ProviderLoginButton/index.js","User/components/ProviderLoginButton/ProviderLoginButton.enhancer.js","User/components/GoogleLoginButton/index.js","User/components/GoogleLoginButton/GoogleLoginButton.js","App/views/Guest/index.js","App/views/Guest/Guest.js","App/views/Loading/index.js","App/views/Loading/Loading.js","App/components/App/App.js","App/components/App/index.js","App/components/App/App.enhancer.js","App/reducer/index.js","Portfolio/reducer/index.js","Stocks/reducer/index.js","ZenMoney/reducer/mergeEntities.js","ZenMoney/reducer/index.js","reducer.js","ZenMoney/actions/types.js","serviceWorker.js","index.js","App/lib/store/createStore.js"],"names":["digest","CreatePositionForm","_ref","amount","date","handleAmountChange","handleDateChange","handlePriceChange","handleSymbolChange","handleSubmit","price","symbol","react","onSubmit","onChange","type","value","min","step","mapDispatchToProps","createPosition","dispatch","getState","getFirebase","firebase","user","auth","currentUser","Error","positionData","push","concat","uid","then","key","position","Object","assign","id","payload","formatDate","toISOString","slice","enhance","compose","connect","withStateHandlers","Date","event","parseInt","target","parseFloat","toUpperCase","withHandlers","onCreate","preventDefault","CreatePosition","handleHomeClick","handleOnCreate","onClick","components_CreatePositionForm","navigate","route","params","withNavigationHandlers","handlersMapper","handlers","keys","forEach","dispatchNavigate","props","objectWithoutProperties","_handlersMapper$key","handlePositionClick","Progress","PositionItem","children","handleClick","isClickable","withProps","_ref2","Stock","logo","logoProgress","quote","quoteProgress","instance","IEX","url","arguments","length","undefined","classCallCheck","this","axios","get","data","fetchQuote","createFetchResource","stocks","quotes","dispatchReceived","dispatchFailed","iex","getStockQuote","catch","error","toString","ttl","fetchLogo","logos","getStockLogo","withStockLogoBySymbol","lifecycle","componentDidMount","_this$props","componentDidUpdate","prevProps","_this$props2","mapProps","getResourceById","objectSpread","extractData","isRequested","withStockQuoteBySymbol","getQuotePrice","iexRealtimePrice","latestPrice","StockPositionItem","components_PositionItem","components_Stock","_ref3","StockPositionsList","positions","map","components_StockPositionItem","style","cursor","components_Progress","toFixed","color","change","changePercent","alt","src","StockPositionsValue","withStockQuotesBySymbols","symbols","a","b","sortedA","sort","sortedB","every","index","areArraysEqual","quotesProgress","quotesArray","resource","filter","toConsumableArray","Set","getUniqueSymbolsFromPositions","find","q","reduce","Home","handleCreatePositionClick","handleProfileClick","positionsLoading","components_StockPositionsValue","components_StockPositionsList","withAuth","branch","isEmpty","isLoaded","renderNothing","withPositionsArray","transform","x","firebaseConnect","path","storeAs","mapStateToProps","withPositions","object","Position","handleDeleteClick","positionLoading","JSON","stringify","withPositionById","extractPositionId","positionId","ownProps","withRouteParams","routeParams","app","deletePosition","remove","LogoutButton","withFirebase","logout","Profile","profile","avatarUrl","align","displayName","email","components_LogoutButton","Navigation","views_CreatePosition","views_Position","views_Profile","views_Home","ProviderLoginButton","provider","login","GoogleLoginButton","components_ProviderLoginButton","Guest","components_GoogleLoginButton","Loading","App","isAuthenticated","progress","views_Loading","components_Navigation","views_Guest","withStockQuotesUpdater","_this","setInterval","expired","allIds","isExpired","console","log","componentWillUnmount","clearInterval","initialState","createInitialState","mergeEntities","oldArray","newArray","array","element","findIndex","brokerageAccountId","accessToken","areTokensRequested","isAuthorized","refreshToken","tokensError","accounts","diffError","diffServerTimestamp","instruments","isDiffRequested","combineReducers","state","action","portfolio","isResourceAction","repositoryReducer","zenMoney","access_token","refresh_token","account","serverTimestamp","instrument","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","container","document","getElementById","store","reducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","middleware","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reactReduxFirebase","userProfile","applyMiddleware","apply","createStore","ReactDOM","render","es","components_App","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.054fdcc4.chunk.js","sourcesContent":["/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle, mapProps } from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { isExpired } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchQuote } from '../actions';\r\nimport * as C from '../../constants';\r\n\r\nconst mapStateToProps = ({ stocks: { quotes } }) => ({ quotes });\r\n\r\nconst mapDispatchToProps = { fetchQuote };\r\n\r\nlet digest;\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      digest = setInterval(() => {\r\n        const { fetchQuote, quotes } = this.props;\r\n        const expired = [];\r\n\r\n        quotes.allIds.forEach((symbol) => {\r\n          const quote = getResourceById(quotes, symbol);\r\n\r\n          if (isExpired(quote, C.STOCKS_QUOTES_TTL)) {\r\n            expired.push(symbol);\r\n            fetchQuote(symbol);\r\n          }\r\n        });\r\n\r\n        console.log('Stock quotes updater working, expired:', expired);\r\n      }, C.STOCKS_QUOTES_UPDATER_INTERVAL);\r\n    },\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(digest);\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchQuote, quotes, ...props }) => props),\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst CreatePositionForm = ({\r\n  amount, date, handleAmountChange, handleDateChange, handlePriceChange,\r\n  handleSymbolChange, handleSubmit, price, symbol,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n\r\n    <div>\r\n      Symbol<br />\r\n      <input onChange={handleSymbolChange} type=\"text\" value={symbol} />\r\n    </div>\r\n\r\n    <div>\r\n      Price<br />\r\n      <input\r\n        min=\"0\"\r\n        onChange={handlePriceChange}\r\n        step=\"0.01\"\r\n        type=\"number\"\r\n        value={price}\r\n      />\r\n    </div>\r\n\r\n    <div>\r\n      Amount<br />\r\n      <input\r\n        min=\"1\"\r\n        onChange={handleAmountChange}\r\n        type=\"number\"\r\n        value={amount}\r\n      />\r\n    </div>\r\n\r\n    <div>\r\n      Date<br />\r\n      <input onChange={handleDateChange} type=\"date\" value={date} />\r\n    </div>\r\n\r\n    <div>\r\n      <button type=\"submit\">Create</button>\r\n    </div>\r\n\r\n  </form>\r\n);\r\n\r\nexport default CreatePositionForm;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  compose, withHandlers, withStateHandlers, type HOC,\r\n} from 'recompose';\r\n\r\nimport { createPosition } from '../../actions';\r\nimport type { Position } from '../../lib/flow';\r\n\r\ntype EnhancedComponentProps = {\r\n  onCreate?: (Position) => void,\r\n};\r\n\r\nconst mapDispatchToProps = { createPosition };\r\n\r\nconst formatDate = date => date.toISOString().slice(0, 10);\r\n\r\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\r\n  connect(null, mapDispatchToProps),\r\n  withStateHandlers(\r\n    {\r\n      amount: 1,\r\n      date: formatDate(new Date()),\r\n      price: 0,\r\n      symbol: '',\r\n    },\r\n    {\r\n      handleAmountChange: () => (event) => {\r\n        const amount = parseInt(event.target.value);\r\n\r\n        return {\r\n          amount: amount > 0 ? amount : 1,\r\n        };\r\n      },\r\n      handleDateChange: () => (event) => {\r\n        const date = new Date(event.target.value);\r\n\r\n        return {\r\n          date: formatDate(date ? date : new Date()),\r\n        };\r\n      },\r\n      handlePriceChange: () => (event) => {\r\n        const price = parseFloat(event.target.value);\r\n\r\n        return {\r\n          price: price >= 0 ? price : 0,\r\n        };\r\n      },\r\n      handleSymbolChange: () => (event) => ({\r\n        symbol: event.target.value.toUpperCase(),\r\n      }),\r\n    },\r\n  ),\r\n  withHandlers({\r\n\r\n    handleSubmit: ({\r\n      amount, createPosition, date, onCreate, price, symbol,\r\n    }) => (event) => {\r\n      event.preventDefault();\r\n\r\n      createPosition(symbol, price, amount, date)\r\n        .then((position) => {\r\n          if (onCreate) {\r\n            onCreate(position);\r\n          }\r\n        });\r\n    },\r\n\r\n  }),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport * as C from '../../constants';\r\nimport * as T from './types';\r\n\r\nexport const createPosition = (\r\n  symbol, price, amount, date,\r\n) => (\r\n  dispatch, getState, getFirebase,\r\n) => {\r\n  const firebase = getFirebase();\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (!user) {\r\n    throw new Error('Trying to create position when unauthorized');\r\n  }\r\n\r\n  const positionData = { amount, date, price, symbol };\r\n\r\n  return firebase.push(`${C.FIREBASE_POSITIONS_PATH}/${user.uid}`, positionData)\r\n    .then(({ key }) => {\r\n      const position = Object.assign({ id: key }, positionData);\r\n\r\n      dispatch({ payload: position, type: T.POSITION_CREATED });\r\n\r\n      return position;\r\n    });\r\n};\r\n\r\nexport const deletePosition = (\r\n  id,\r\n) => (\r\n  dispatch, getState, getFirebase,\r\n) => {\r\n  if (!id) {\r\n    throw new Error('Trying to delete position without ID');\r\n  }\r\n\r\n  const firebase = getFirebase();\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (!user) {\r\n    throw new Error('Trying to delete position when unauthorized');\r\n  }\r\n\r\n  return firebase.remove(`${C.FIREBASE_POSITIONS_PATH}/${user.uid}/${id}`)\r\n    .then(() => {\r\n      dispatch({ payload: id, type: T.POSITION_DELETED });\r\n    });\r\n};\r\n","/* @flow */\r\n\r\nexport const FIREBASE_POSITIONS_PATH = 'positions';\r\nexport const FIREBASE_USERS_PATH = 'users';\r\n\r\nexport const STOCKS_LOGOS_RESOURCE_NAME = 'stocks/logos';\r\nexport const STOCKS_LOGOS_TTL = 7 * 24 * 60 * 60 * 1000; // 1 week\r\n\r\nexport const STOCKS_QUOTES_RESOURCE_NAME = 'stocks/quotes';\r\nexport const STOCKS_QUOTES_TTL = 5 * 60 * 1000; // 5 min\r\n\r\nexport const STOCKS_QUOTES_UPDATER_INTERVAL = 30 * 1000; // 30 sec\r\n\r\nexport const FIREBASE_API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\r\nexport const FIREBASE_AUTH_DOMAIN = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\r\nexport const FIREBASE_DATABASE_URL = process.env.REACT_APP_FIREBASE_DATABASE_URL;\r\nexport const FIREBASE_MESSAGING_SENDER_ID = process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID;\r\nexport const FIREBASE_PROJECT_ID = process.env.REACT_APP_FIREBASE_PROJECT_ID;\r\nexport const FIREBASE_STORAGE_BUCKET = process.env.REACT_APP_FIREBASE_STORAGE_BUCKET;\r\n\r\nexport const ZENMONEY_CONSUMER_KEY = process.env.REACT_APP_ZENMONEY_CONSUMER_KEY;\r\nexport const ZENMONEY_CONSUMER_SECRET = process.env.REACT_APP_ZENMONEY_CONSUMER_SECRET;\r\nexport const ZENMONEY_REDIRECT_URL = process.env.REACT_APP_ZENMONEY_REDIRECT_URL;\r\n","/* @flow */\r\n\r\nexport const POSITION_CREATED = 'portfolio/POSITION_CREATED';\r\nexport const POSITION_DELETED = 'portfolio/POSITION_DELETED';\r\n","/* @flow */\r\n\r\nimport CreatePositionForm from './CreatePositionForm';\r\nimport enhance from './CreatePositionForm.enhancer';\r\n\r\nexport default enhance(CreatePositionForm);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport CreatePositionForm from 'Portfolio/components/CreatePositionForm';\r\n\r\nconst CreatePosition = ({ handleHomeClick, handleOnCreate }) => (\r\n  <React.Fragment>\r\n\r\n    <div>\r\n      <button onClick={handleHomeClick}>Home</button>\r\n    </div>\r\n\r\n    <h1>Create position</h1>\r\n\r\n    <CreatePositionForm onCreate={handleOnCreate} />\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default CreatePosition;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withHandlers, type HOC } from 'recompose';\r\n\r\nimport { navigate } from '../actions';\r\n\r\ntype HandlersMapper = {\r\n  [string]: string | ({}, any) => { params: {}, route: string },\r\n};\r\n\r\nconst mapDispatchToProps = { navigate };\r\n\r\nconst withNavigationHandlers: HOC<*, *> = (\r\n  handlersMapper: HandlersMapper,\r\n) => compose(\r\n  connect(null, mapDispatchToProps),\r\n  withHandlers(() => {\r\n    const handlers = {};\r\n\r\n    Object.keys(handlersMapper).forEach((key) => {\r\n      handlers[key] = ({ navigate: dispatchNavigate, ...props }) => (event) => {\r\n        if (typeof handlersMapper[key] === 'function') {\r\n          const { params, route } = handlersMapper[key](props, event);\r\n          dispatchNavigate(route, params);\r\n        } else {\r\n          const route = handlersMapper[key];\r\n          dispatchNavigate(route);\r\n        }\r\n      };\r\n    });\r\n\r\n    return handlers;\r\n  }),\r\n);\r\n\r\nexport default withNavigationHandlers;\r\n","/* @flow */\r\n\r\nimport * as T from './types';\r\n\r\nexport const navigate = (route: string, params?: {}) => dispatch => {\r\n  dispatch({\r\n    payload: { route, params },\r\n    type: T.NAVIGATE,\r\n  });\r\n};\r\n","/* @flow */\r\n\r\nexport const NAVIGATE = 'app/NAVIGATE';\r\n","/* @flow */\r\n\r\nimport CreatePosition from './CreatePosition';\r\nimport enhance from './CreatePosition.enhancer';\r\n\r\nexport default enhance(CreatePosition);\r\n","/* @flow */\r\n\r\nimport { compose, withHandlers, type HOC } from 'recompose';\r\n\r\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\r\nimport * as R from '../../routes';\r\n\r\nconst enhancer: HOC<*, *> = compose(\r\n  withNavigationHandlers({\r\n    handleHomeClick: R.HOME,\r\n    handlePositionClick: (props, position) => ({\r\n      params: { position: position.id },\r\n      route: R.POSITION,\r\n    }),\r\n  }),\r\n  withHandlers({\r\n\r\n    handleOnCreate: ({ handlePositionClick }) => (position) => {\r\n      handlePositionClick(position);\r\n    },\r\n\r\n  }),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nexport const CREATE_POSITION = 'CREATE_POSITION';\r\nexport const HOME = 'HOME';\r\nexport const POSITION = 'POSITION';\r\nexport const PROFILE = 'PROFILE';\r\n","/* @flow */\r\n\r\nimport Progress from './Progress';\r\n\r\nexport default Progress;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst Progress = () => (\r\n  <div>Progress...</div>\r\n);\r\n\r\nexport default Progress;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Position } from '../../lib/flow';\r\n\r\ntype Props = {\r\n  children: React.Node,\r\n  handleClick: () => void,\r\n  isClickable: boolean,\r\n  position: Position,\r\n};\r\n\r\nconst PositionItem = ({\r\n  children, handleClick, isClickable, position,\r\n}: Props) => children({ handleClick, isClickable, position });\r\n\r\nexport default PositionItem;\r\n","/* @flow */\r\n\r\nimport PositionItem from './PositionItem';\r\nimport enhance from './PositionItem.enhancer';\r\n\r\nexport default enhance(PositionItem);\r\n","/* @flow */\r\n\r\nimport {\r\n  compose, withHandlers, withProps, type HOC,\r\n} from 'recompose';\r\n\r\ntype EnhancedComponentProps = {\r\n  onClick?: (Position) => void,\r\n  position: Position,\r\n};\r\n\r\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\r\n  withHandlers({\r\n\r\n    handleClick: ({ onClick, position }) => () => {\r\n      if (onClick) {\r\n        onClick(position);\r\n      }\r\n    },\r\n\r\n  }),\r\n  withProps(({ onClick }) => ({\r\n    isClickable: !!onClick,\r\n  })),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Quote } from '../../lib/IEX/IEX';\r\n\r\ntype Props = {\r\n  children: React.Node,\r\n  logo: ?string,\r\n  logoProgress: boolean,\r\n  price: number,\r\n  quote: ?Quote,\r\n  quoteProgress: boolean,\r\n  symbol: string,\r\n};\r\n\r\nconst Stock = ({\r\n  children, logo, logoProgress, price, quote, quoteProgress, symbol,\r\n}: Props) => children({\r\n  logo, logoProgress, price, quote, quoteProgress, symbol,\r\n});\r\n\r\nexport default Stock;\r\n","/* @flow */\r\n\r\nimport IEX from './IEX';\r\n\r\nconst instance = new IEX();\r\n\r\nexport default instance;\r\n","/* @flow */\r\n\r\nimport axios from 'axios';\r\n\r\nexport type Quote = {\r\n  change: number,\r\n  changePercent: number,\r\n  iexRealtimePrice?: number,\r\n  latestPrice: number,\r\n  symbol: string,\r\n};\r\n\r\nexport default class IEX {\r\n  constructor(url: string = 'https://api.iextrading.com/1.0') {\r\n    this.url = url;\r\n  }\r\n\r\n  getStockLogo(symbol: string) {\r\n    return axios.get(`${this.url}/stock/${symbol}/logo`)\r\n      .then(({ data }) => (data.url: string));\r\n  }\r\n\r\n  getStockQuote(symbol: string) {\r\n    return axios.get(`${this.url}/stock/${symbol}/quote`)\r\n      .then(({ data }) => (data: Quote));\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { createFetchResource } from 'redux-repository/lib/actions';\r\n\r\nimport * as C from '../../constants';\r\nimport iex from '../lib/IEX/instance';\r\n\r\nexport const fetchLogo = symbol => createFetchResource(\r\n  C.STOCKS_LOGOS_RESOURCE_NAME,\r\n  symbol,\r\n  ({ stocks: { logos } }) => logos,\r\n  (dispatchReceived, dispatchFailed) => {\r\n    iex.getStockLogo(symbol)\r\n      .then(data => dispatchReceived(data))\r\n      .catch(error => dispatchFailed(error.toString()));\r\n  },\r\n  { ttl: C.STOCKS_LOGOS_TTL },\r\n);\r\n\r\nexport const fetchQuote = symbol => createFetchResource(\r\n  C.STOCKS_QUOTES_RESOURCE_NAME,\r\n  symbol,\r\n  ({ stocks: { quotes } }) => quotes,\r\n  (dispatchReceived, dispatchFailed) => {\r\n    iex.getStockQuote(symbol)\r\n      .then(data => dispatchReceived(data))\r\n      .catch(error => dispatchFailed(error.toString()));\r\n  },\r\n  { ttl: C.STOCKS_QUOTES_TTL },\r\n);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  compose, lifecycle, mapProps, type HOC,\r\n} from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchLogo } from '../actions';\r\n\r\ntype EnhancedComponentProps = {\r\n  symbol: string,\r\n};\r\n\r\nconst mapStateToProps = ({ stocks: { logos } }) => ({ logos });\r\n\r\nconst mapDispatchToProps = { fetchLogo };\r\n\r\nconst withStockLogoBySymbol: HOC<*, EnhancedComponentProps> = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchLogo, symbol } = this.props;\r\n\r\n      if (symbol) {\r\n        fetchLogo(symbol);\r\n      }\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { fetchLogo, symbol } = this.props;\r\n\r\n      if (symbol && symbol !== prevProps.symbol) {\r\n        fetchLogo(symbol);\r\n      }\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchLogo, logos, symbol, ...props }) => {\r\n    const logo = getResourceById(logos, symbol);\r\n\r\n    return {\r\n      logo: extractData(logo),\r\n      logoProgress: isRequested(logo),\r\n      symbol,\r\n      ...props,\r\n    };\r\n  }),\r\n);\r\n\r\nexport default withStockLogoBySymbol;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  compose, lifecycle, mapProps, type HOC,\r\n} from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchQuote } from '../actions';\r\n\r\ntype EnhancedComponentProps = {\r\n  symbol: string,\r\n};\r\n\r\nconst mapStateToProps = ({ stocks: { quotes } }) => ({ quotes });\r\n\r\nconst mapDispatchToProps = { fetchQuote };\r\n\r\nconst withStockQuoteBySymbol: HOC<*, EnhancedComponentProps> = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchQuote, symbol } = this.props;\r\n\r\n      if (symbol) {\r\n        fetchQuote(symbol);\r\n      }\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { fetchQuote, symbol } = this.props;\r\n\r\n      if (symbol && symbol !== prevProps.symbol) {\r\n        fetchQuote(symbol);\r\n      }\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchQuote, quotes, symbol, ...props }) => {\r\n    const quote = getResourceById(quotes, symbol);\r\n\r\n    return {\r\n      quote: extractData(quote),\r\n      quoteProgress: isRequested(quote),\r\n      symbol,\r\n      ...props,\r\n    };\r\n  }),\r\n);\r\n\r\nexport default withStockQuoteBySymbol;\r\n","/* @flow */\r\n\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData } from 'redux-repository/lib/resource';\r\n\r\nexport const findQuoteBySymbol = (quotesRepository, symbol) => (\r\n  extractData(getResourceById(quotesRepository, symbol))\r\n);\r\n\r\nexport const getQuotePrice = (quote) => {\r\n  if (quote) {\r\n    if (quote.iexRealtimePrice) {\r\n      return quote.iexRealtimePrice;\r\n    }\r\n\r\n    if (quote.latestPrice) {\r\n      return quote.latestPrice;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n};\r\n","/* @flow */\r\n\r\nimport Stock from './Stock';\r\nimport enhance from './Stock.enhancer';\r\n\r\nexport default enhance(Stock);\r\n","/* @flow */\r\n\r\nimport { compose, withProps, type HOC } from 'recompose';\r\n\r\nimport withStockLogoBySymbol from '../../enhancers/withStockLogoBySymbol';\r\nimport withStockQuoteBySymbol from '../../enhancers/withStockQuoteBySymbol';\r\nimport { getQuotePrice } from '../../lib/stocks';\r\n\r\ntype EnhancedComponentProps = {\r\n  symbol: string,\r\n};\r\n\r\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\r\n  withStockLogoBySymbol,\r\n  withStockQuoteBySymbol,\r\n  withProps(({ quote }) => ({\r\n    price: getQuotePrice(quote),\r\n  })),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport StockPositionItem from './StockPositionItem';\r\n\r\nexport default StockPositionItem;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Position } from 'Portfolio/lib/flow';\r\nimport PositionItem from 'Portfolio/components/PositionItem';\r\nimport Stock from 'Stocks/components/Stock';\r\n\r\ntype Props = {\r\n  children: React.Node,\r\n  onClick?: (Position) => void,\r\n  position: Position,\r\n};\r\n\r\nconst StockPositionItem = ({ children, onClick, position }: Props) => (\r\n  <PositionItem onClick={onClick} position={position}>\r\n    {({ handleClick, isClickable }) => (\r\n      <Stock symbol={position.symbol}>\r\n        {({ logo, logoProgress, price, quote, quoteProgress }) => children({\r\n          handleClick, isClickable, logo, logoProgress, position, price, quote,\r\n          quoteProgress,\r\n        })}\r\n      </Stock>\r\n    )}\r\n  </PositionItem>\r\n);\r\n\r\nexport default StockPositionItem;\r\n","/* @flow */\r\n\r\nimport StockPositionsList from './StockPositionsList';\r\n\r\nexport default StockPositionsList;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Position } from 'Portfolio/lib/flow';\r\nimport Progress from 'Shared/components/Progress';\r\n\r\nimport StockPositionItem from '../StockPositionItem';\r\n\r\ntype Props = {\r\n  onClick?: (Position) => void,\r\n  positions: Array<Position>,\r\n};\r\n\r\nconst StockPositionsList = ({ onClick, positions }: Props) => (\r\n  <div>\r\n    {positions.map(position => (\r\n      <StockPositionItem\r\n        key={position.id}\r\n        onClick={onClick}\r\n        position={position}\r\n      >\r\n        {({ handleClick, isClickable, logo, logoProgress, price, quote, quoteProgress }) => (\r\n          <div\r\n            onClick={handleClick}\r\n            style={isClickable ? { cursor: 'pointer' } : {}}\r\n          >\r\n\r\n            <div>\r\n              {position.symbol}\r\n            </div>\r\n\r\n            <div>\r\n              {quoteProgress\r\n                ? <Progress />\r\n                : quote && (\r\n                <React.Fragment>\r\n\r\n                  <div>\r\n                    {price.toFixed(2)}\r\n                    {' x '}\r\n                    {position.amount}\r\n                    {' = '}\r\n                    {(position.amount * price).toFixed(2)}\r\n                  </div>\r\n\r\n                  <div style={{ color: quote.change >= 0 ? 'green' : 'red' }}>\r\n                    {(quote.changePercent * 100).toFixed(2)}%\r\n                    {' '}\r\n                    ({(position.amount * quote.change).toFixed(2)})\r\n                  </div>\r\n\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {logoProgress\r\n                ? <Progress />\r\n                : logo && (\r\n                <img alt=\"\" src={logo} />\r\n              )}\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n      </StockPositionItem>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default StockPositionsList;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\ntype Props = {\r\n  children: React.Node,\r\n  value: number,\r\n};\r\n\r\nconst StockPositionsValue = ({ children, value }: Props) => children({ value });\r\n\r\nexport default StockPositionsValue;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  compose, lifecycle, mapProps, type HOC,\r\n} from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\r\n\r\nimport { areArraysEqual } from 'Shared/lib/utils';\r\n\r\nimport { fetchQuote } from '../actions';\r\n\r\ntype EnhancedComponentProps = {\r\n  symbols: Array<string>,\r\n};\r\n\r\nconst mapStateToProps = ({ stocks: { quotes } }) => ({ quotes });\r\n\r\nconst mapDispatchToProps = { fetchQuote };\r\n\r\nconst withStockQuotesBySymbols: HOC<*, EnhancedComponentProps> = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchQuote, symbols } = this.props;\r\n\r\n      symbols.forEach(symbol => fetchQuote(symbol));\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { fetchQuote, symbols } = this.props;\r\n\r\n      if (!areArraysEqual(symbols, prevProps.symbols)) {\r\n        symbols.forEach(symbol => fetchQuote(symbol));\r\n      }\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchQuote, quotes, symbols, ...props }) => {\r\n    let quotesProgress = false;\r\n\r\n    const quotesArray = symbols\r\n      .map((symbol) => {\r\n        const resource = getResourceById(quotes, symbol);\r\n\r\n        if (isRequested(resource)) {\r\n          quotesProgress = true;\r\n        }\r\n\r\n        return extractData(resource);\r\n      })\r\n      .filter(value => !!value);\r\n\r\n    return {\r\n      quotes: quotesArray,\r\n      quotesProgress,\r\n      symbols,\r\n      ...props,\r\n    };\r\n  }),\r\n);\r\n\r\nexport default withStockQuotesBySymbols;\r\n","/* @flow */\r\n\r\nexport const areArraysEqual = (a, b) => {\r\n  if (a.length === b.length) {\r\n    return true;\r\n  }\r\n\r\n  const sortedA = a.sort();\r\n  const sortedB = b.sort();\r\n\r\n  return sortedA.every((value, index) => value === sortedB[index]);\r\n};\r\n","/* @flow */\r\n\r\nimport StockPositionsValue from './StockPositionsValue';\r\nimport enhance from './StockPositionsValue.enhancer';\r\n\r\nexport default enhance(StockPositionsValue);\r\n","/* @flow */\r\n\r\nimport { compose, withProps, type HOC } from 'recompose';\r\n\r\nimport type { Position } from 'Portfolio/lib/flow';\r\nimport { getUniqueSymbolsFromPositions } from 'Portfolio/lib/portfolio';\r\nimport withStockQuotesBySymbols\r\n  from 'Stocks/enhancers/withStockQuotesBySymbols';\r\nimport { getQuotePrice } from 'Stocks/lib/stocks';\r\n\r\ntype EnhancedComponentProps = {\r\n  positions: Array<Position>,\r\n}\r\n\r\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\r\n  withProps(({ positions }) => ({\r\n    symbols: getUniqueSymbolsFromPositions(positions),\r\n  })),\r\n  withStockQuotesBySymbols,\r\n  withProps(({ positions, quotes, quotesProgress }) => {\r\n    let value = 0;\r\n\r\n    if (!quotesProgress) {\r\n      value = positions\r\n        .map((position) => {\r\n          const { amount, symbol } = position;\r\n          const quote = quotes.find(q => q.symbol === symbol);\r\n\r\n          return amount * getQuotePrice(quote);\r\n        })\r\n        .reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    return { value };\r\n  }),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport { findQuoteBySymbol, getQuotePrice } from 'Stocks/lib/stocks';\r\n\r\nimport type { Position } from '../flow';\r\n\r\nexport const calculatePositionsValue = (positions, quotesRepository) => (\r\n  positions\r\n    .map(position => {\r\n      const { amount, symbol } = position;\r\n\r\n      const quote = findQuoteBySymbol(quotesRepository, symbol);\r\n\r\n      return amount * getQuotePrice(quote);\r\n    })\r\n    .reduce((a, b) => a + b, 0)\r\n);\r\n\r\nexport const getUniqueSymbolsFromPositions = (positions: Array<Position>) => [\r\n  ...new Set(positions.map(position => position.symbol)),\r\n];\r\n\r\nexport const mergePositionsBySymbols = (positions) => {\r\n  const symbols = {};\r\n\r\n  positions.forEach((position) => {\r\n    const { amount, price, symbol } = position;\r\n\r\n    if (!symbols[symbol]) {\r\n      symbols[symbol] = {\r\n        amount: 0,\r\n        positions: [],\r\n        price: 0,\r\n      };\r\n    }\r\n\r\n    symbols[symbol].amount += amount;\r\n    symbols[symbol].price += amount * price;\r\n    symbols[symbol].positions.push(position);\r\n  });\r\n\r\n  return Object.keys(symbols).map(symbol => ({\r\n    ...symbols[symbol],\r\n    symbol,\r\n  }));\r\n};\r\n\r\nexport const mergeSymbolsBySectors = (symbols, quotesRepository) => {\r\n  const sectors = {};\r\n  let currentTotalPrice = 0;\r\n\r\n  symbols.forEach((symbolObject) => {\r\n    const { amount, price, symbol } = symbolObject;\r\n    const quote = findQuoteBySymbol(quotesRepository, symbol);\r\n\r\n    if (!quote || !quote.sector) {\r\n      return;\r\n    }\r\n\r\n    const { sector } = quote;\r\n\r\n    if (!sectors[sector]) {\r\n      sectors[sector] = {\r\n        amount: 0,\r\n        currentPrice: 0,\r\n        initialPrice: 0,\r\n        symbols: [],\r\n      };\r\n    }\r\n\r\n    sectors[sector].amount += amount;\r\n    sectors[sector].currentPrice += amount * getQuotePrice(quote);\r\n    sectors[sector].initialPrice += price;\r\n    sectors[sector].symbols.push(symbolObject);\r\n\r\n    currentTotalPrice += sectors[sector].currentPrice;\r\n  });\r\n\r\n  return Object.keys(sectors).map(sector => ({\r\n    ...sectors[sector],\r\n    sector,\r\n    share: sectors[sector].currentPrice / currentTotalPrice,\r\n  }));\r\n};\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Position } from 'Portfolio/lib/flow';\r\nimport Progress from 'Shared/components/Progress';\r\n\r\nimport StockPositionsList from '../../components/StockPositionsList';\r\nimport StockPositionsValue from '../../components/StockPositionsValue';\r\n\r\ntype Props = {\r\n  handleCreatePositionClick: () => void,\r\n  handlePositionClick: () => void,\r\n  handleProfileClick: () => void,\r\n  positions: Array<Position>,\r\n  positionsLoading: boolean,\r\n};\r\n\r\nconst Home = ({\r\n  handleCreatePositionClick, handlePositionClick, handleProfileClick, positions,\r\n  positionsLoading,\r\n}: Props) => (\r\n  <React.Fragment>\r\n\r\n    <h1>Home</h1>\r\n\r\n    <div>\r\n      <button onClick={handleCreatePositionClick}>Create position</button>\r\n      <button onClick={handleProfileClick}>Profile</button>\r\n    </div>\r\n\r\n    <div>\r\n      {positionsLoading\r\n        ? <Progress />\r\n        : (\r\n          <StockPositionsValue positions={positions}>\r\n            {({ value }) => value.toFixed(2)}\r\n          </StockPositionsValue>\r\n        )}\r\n    </div>\r\n\r\n    <div>\r\n      {positionsLoading\r\n        ? <Progress />\r\n        : (\r\n          <StockPositionsList\r\n            onClick={handlePositionClick}\r\n            positions={positions}\r\n          />\r\n        )}\r\n    </div>\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Home;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { isEmpty, isLoaded } from 'react-redux-firebase';\r\nimport {\r\n  compose, branch, renderNothing, type HOC,\r\n} from 'recompose';\r\n\r\nconst mapStateToProps = ({ firebase: { auth } }) => ({ auth });\r\n\r\nconst withAuth: HOC<*, *> = compose(\r\n  connect(mapStateToProps),\r\n  branch(\r\n    ({ auth }) => isEmpty(auth) || !isLoaded(auth),\r\n    renderNothing,\r\n  ),\r\n);\r\n\r\nexport default withAuth;\r\n","/* @flow */\r\n\r\nimport { firebaseCollectionToArray } from 'Shared/lib/transform';\r\n\r\nimport withPositions from './withPositions';\r\n\r\nconst withPositionsArray = withPositions(firebaseCollectionToArray);\r\n\r\nexport default withPositionsArray;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect, isLoaded } from 'react-redux-firebase';\r\nimport { compose, type HOC } from 'recompose';\r\n\r\nimport withAuth from 'User/enhancers/withAuth';\r\n\r\nimport * as C from '../../constants';\r\n\r\nconst mapStateToProps = (transform: Function) => ({ firebase: { data } }) => ({\r\n  positions: transform(data[C.FIREBASE_POSITIONS_PATH] || {}),\r\n  positionsLoading: !isLoaded(data[C.FIREBASE_POSITIONS_PATH]),\r\n});\r\n\r\nconst withPositions: HOC<*, *> = (transform: Function = x => x) => compose(\r\n  withAuth,\r\n  firebaseConnect(({ auth }) => [\r\n    {\r\n      path: `${C.FIREBASE_POSITIONS_PATH}/${auth.uid}`,\r\n      storeAs: C.FIREBASE_POSITIONS_PATH,\r\n    },\r\n  ]),\r\n  connect(mapStateToProps(transform)),\r\n);\r\n\r\nexport default withPositions;\r\n","/* @flow */\r\n\r\nexport const firebaseCollectionToArray = (object: {}) => (\r\n  Object.keys(object).map(id => ({\r\n    ...object[id],\r\n    id,\r\n  }))\r\n);\r\n","/* @flow */\r\n\r\nimport Home from './Home';\r\nimport enhance from './Home.enhancer';\r\n\r\nexport default enhance(Home);\r\n","/* @flow */\r\n\r\nimport { compose, type HOC } from 'recompose';\r\n\r\nimport withPositionsArray from 'Portfolio/enhancers/withPositionsArray';\r\n\r\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\r\nimport * as R from '../../routes';\r\n\r\nconst enhancer: HOC<*, *> = compose(\r\n  withNavigationHandlers({\r\n    handleCreatePositionClick: R.CREATE_POSITION,\r\n    handlePositionClick: (props, position) => ({\r\n      params: { position: position.id },\r\n      route: R.POSITION,\r\n    }),\r\n    handleProfileClick: R.PROFILE,\r\n  }),\r\n  withPositionsArray,\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport type { Position as PositionType } from 'Portfolio/lib/flow';\r\nimport Progress from 'Shared/components/Progress';\r\n\r\ntype Props = {\r\n  handleDeleteClick: () => void,\r\n  handleHomeClick: () => void,\r\n  position: PositionType,\r\n  positionLoading: boolean,\r\n};\r\n\r\nconst Position = ({\r\n  handleDeleteClick, handleHomeClick, position, positionLoading,\r\n}: Props) => (\r\n  <React.Fragment>\r\n\r\n    <div>\r\n      <button onClick={handleHomeClick}>Home</button>\r\n    </div>\r\n\r\n    <h1>Position</h1>\r\n\r\n    <div>\r\n      {positionLoading\r\n        ? <Progress />\r\n        : JSON.stringify(position)}\r\n    </div>\r\n\r\n    <div>\r\n      <button onClick={handleDeleteClick}>Delete</button>\r\n    </div>\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Position;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect, isLoaded } from 'react-redux-firebase';\r\nimport { compose, type HOC } from 'recompose';\r\n\r\nimport withAuth from 'User/enhancers/withAuth';\r\n\r\nimport * as C from '../../constants';\r\n\r\ntype ExtractPositionId = ({}) => string;\r\n\r\nconst mapStateToProps = (extractPositionId: ExtractPositionId) => (\r\n  { firebase: { data } },\r\n  ownProps,\r\n) => {\r\n  const positionId = extractPositionId(ownProps);\r\n  const positionData = data[C.FIREBASE_POSITIONS_PATH]\r\n    && data[C.FIREBASE_POSITIONS_PATH][positionId];\r\n\r\n  return {\r\n    position: Object.assign({ id: positionId }, positionData),\r\n    positionLoading: !isLoaded(positionData),\r\n  };\r\n};\r\n\r\nconst withPositionById: HOC<*, *> = (\r\n  extractPositionId: ExtractPositionId,\r\n) => compose(\r\n  withAuth,\r\n  firebaseConnect((props) => {\r\n    const { auth } = props;\r\n    const positionId = extractPositionId(props);\r\n\r\n    return [\r\n      {\r\n        path: `${C.FIREBASE_POSITIONS_PATH}/${auth.uid}/${positionId}`,\r\n        storeAs: `${C.FIREBASE_POSITIONS_PATH}/${positionId}`,\r\n      },\r\n    ];\r\n  }),\r\n  connect(mapStateToProps(extractPositionId)),\r\n);\r\n\r\nexport default withPositionById;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ({ app: { routeParams } }) => ({ routeParams });\r\n\r\nconst withRouteParams = connect(mapStateToProps);\r\n\r\nexport default withRouteParams;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withHandlers, type HOC } from 'recompose';\r\n\r\nimport { deletePosition } from 'Portfolio/actions';\r\nimport withPositionById from 'Portfolio/enhancers/withPositionById';\r\n\r\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\r\nimport withRouteParams from '../../enhancers/withRouteParams';\r\nimport * as R from '../../routes';\r\n\r\nconst mapDispatchToProps = { deletePosition };\r\n\r\nconst enhancer: HOC<*, *> = compose(\r\n  withNavigationHandlers({\r\n    handleHomeClick: R.HOME,\r\n  }),\r\n  withRouteParams,\r\n  withPositionById(({ routeParams }) => routeParams.position),\r\n  connect(null, mapDispatchToProps),\r\n  withHandlers({\r\n\r\n    handleDeleteClick: ({\r\n      deletePosition, handleHomeClick, position,\r\n    }) => () => {\r\n      deletePosition(position.id)\r\n        .then(() => handleHomeClick());\r\n    },\r\n\r\n  }),\r\n);\r\n\r\nexport default enhancer;\r\n","/* @flow */\r\n\r\nimport Position from './Position';\r\nimport enhance from './Position.enhancer';\r\n\r\nexport default enhance(Position);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst LogoutButton = ({ children, handleClick }) => (\r\n  <button onClick={handleClick}>{children}</button>\r\n);\r\n\r\nexport default LogoutButton;\r\n","/* @flow */\r\n\r\nimport LogoutButton from './LogoutButton';\r\nimport enhance from './LogoutButton.enhancer';\r\n\r\nexport default enhance(LogoutButton);\r\n","/* @flow */\r\n\r\nimport { withFirebase } from 'react-redux-firebase';\r\nimport { compose, withHandlers } from 'recompose';\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withHandlers({\r\n\r\n    handleClick: ({ firebase }) => () => {\r\n      firebase.logout();\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport LogoutButton from 'User/components/LogoutButton';\r\n\r\nconst Profile = ({ handleHomeClick, profile }) => (\r\n  <React.Fragment>\r\n\r\n    <div>\r\n      <button onClick={handleHomeClick}>Home</button>\r\n    </div>\r\n\r\n    <h1>Profile</h1>\r\n\r\n    <div>\r\n\r\n      {profile.avatarUrl && (\r\n        <img align=\"right\" alt=\"Avatar\" src={profile.avatarUrl} />\r\n      )}\r\n\r\n      {profile.displayName && (\r\n        <strong>{profile.displayName}</strong>\r\n      )}\r\n\r\n      {profile.email && (\r\n        <em>{profile.email}</em>\r\n      )}\r\n\r\n    </div>\r\n\r\n    <div>\r\n      <LogoutButton>Logout</LogoutButton>\r\n    </div>\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Profile;\r\n","/* @flow */\r\n\r\nimport Profile from './Profile';\r\nimport enhance from './Profile.enhancer';\r\n\r\nexport default enhance(Profile);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\n\r\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\r\nimport * as R from '../../routes';\r\n\r\nconst mapStateToProps = ({ firebase: { profile } }) => ({ profile });\r\n\r\nexport default compose(\r\n  withNavigationHandlers({\r\n    handleHomeClick: R.HOME,\r\n  }),\r\n  connect(mapStateToProps),\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport * as R from '../../routes';\r\nimport CreatePosition from '../../views/CreatePosition';\r\nimport Home from '../../views/Home';\r\nimport Position from '../../views/Position';\r\nimport Profile from '../../views/Profile';\r\n\r\nconst Navigation = ({ route }) => {\r\n  switch (route) {\r\n    case R.CREATE_POSITION:\r\n      return <CreatePosition />;\r\n\r\n    case R.POSITION:\r\n      return <Position />;\r\n\r\n    case R.PROFILE:\r\n      return <Profile />;\r\n\r\n    default:\r\n      return <Home />;\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","/* @flow */\r\n\r\nimport Navigation from './Navigation';\r\nimport enhance from './Navigation.enhancer';\r\n\r\nexport default enhance(Navigation);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ({ app: { route } }) => ({ route });\r\n\r\nexport default connect(mapStateToProps);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ProviderLoginButton = ({ children, handleClick }) => (\r\n  <button onClick={handleClick}>{children}</button>\r\n);\r\n\r\nexport default ProviderLoginButton;\r\n","/* @flow */\r\n\r\nimport ProviderLoginButton from './ProviderLoginButton';\r\nimport enhance from './ProviderLoginButton.enhancer';\r\n\r\nexport default enhance(ProviderLoginButton);\r\n","/* @flow */\r\n\r\nimport { withFirebase } from 'react-redux-firebase';\r\nimport { compose, withHandlers } from 'recompose';\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withHandlers({\r\n\r\n    handleClick: ({ firebase, provider }) => () => {\r\n      firebase.login({ provider });\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport GoogleLoginButton from './GoogleLoginButton';\r\n\r\nexport default GoogleLoginButton;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport ProviderLoginButton from '../ProviderLoginButton';\r\n\r\nconst GoogleLoginButton = () => (\r\n  <ProviderLoginButton provider=\"google\">\r\n    Sign in with Google\r\n  </ProviderLoginButton>\r\n);\r\n\r\nexport default GoogleLoginButton;\r\n","/* @flow */\r\n\r\nimport Guest from './Guest';\r\n\r\nexport default Guest;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport GoogleLoginButton from 'User/components/GoogleLoginButton';\r\n\r\nconst Guest = () => (\r\n  <React.Fragment>\r\n\r\n    <h1>Welcome!</h1>\r\n\r\n    <div>\r\n      <GoogleLoginButton />\r\n    </div>\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Guest;\r\n","/* @flow */\r\n\r\nimport Loading from './Loading';\r\n\r\nexport default Loading;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport Progress from 'Shared/components/Progress';\r\n\r\nconst Loading = () => (\r\n  <React.Fragment>\r\n\r\n    <h1>Loading</h1>\r\n\r\n    <div>\r\n      <Progress />\r\n    </div>\r\n\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Loading;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport Navigation from '../Navigation';\r\nimport Guest from '../../views/Guest';\r\nimport Loading from '../../views/Loading';\r\n\r\nconst App = ({ isAuthenticated, progress }) => {\r\n  if (progress) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Guest />;\r\n  }\r\n\r\n  return <Navigation />;\r\n};\r\n\r\nexport default App;\r\n","/* @flow */\r\n\r\nimport App from './App';\r\nimport enhance from './App.enhancer';\r\n\r\nexport default enhance(App);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { isEmpty, isLoaded } from 'react-redux-firebase';\r\nimport { branch, compose, withProps } from 'recompose';\r\n\r\nimport withStockQuotesUpdater from 'Stocks/enhancers/withStockQuotesUpdater';\r\n\r\nconst mapStateToProps = ({ firebase: { auth } }) => ({ auth });\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withProps(({ auth }) => ({\r\n    isAuthenticated: !isEmpty(auth) && isLoaded(auth),\r\n    progress: !isLoaded(auth),\r\n  })),\r\n  branch(\r\n    ({ isAuthenticated }) => isAuthenticated,\r\n    withStockQuotesUpdater,\r\n  ),\r\n);\r\n","/* @flow */\r\n\r\nimport * as T from '../actions/types';\r\nimport * as R from '../routes';\r\n\r\nexport type State = {\r\n  route: string,\r\n  routeParams: {},\r\n};\r\n\r\nconst initialState: State = {\r\n  route: R.HOME,\r\n  routeParams: {},\r\n};\r\n\r\nexport default (state: State = initialState, action): State => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    case T.NAVIGATE:\r\n      return {\r\n        ...state,\r\n        route: payload.route,\r\n        routeParams: payload.params ? payload.params : {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport * as T from '../actions/types';\r\n\r\nconst initialState = {\r\n  //\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case T.POSITION_CREATED:\r\n      return state;\r\n\r\n    case T.POSITION_DELETED:\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport {\r\n  isResourceAction, repositoryReducer,\r\n} from 'redux-repository/lib/reducer';\r\nimport { createInitialState } from 'redux-repository/lib/repository';\r\n\r\nimport * as C from '../../constants';\r\n\r\nconst initialState = {\r\n  logos: createInitialState(),\r\n  quotes: createInitialState(),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  if (isResourceAction(C.STOCKS_LOGOS_RESOURCE_NAME, action)) {\r\n    return {\r\n      ...state,\r\n      logos: repositoryReducer(state.logos, action),\r\n    };\r\n  }\r\n\r\n  if (isResourceAction(C.STOCKS_QUOTES_RESOURCE_NAME, action)) {\r\n    return {\r\n      ...state,\r\n      quotes: repositoryReducer(state.quotes, action),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","/* @flow */\r\n\r\nexport default (oldArray, newArray) => {\r\n  if (!oldArray && !newArray) {\r\n    return [];\r\n  }\r\n\r\n  if (!oldArray) {\r\n    return newArray;\r\n  }\r\n\r\n  const array = oldArray.slice();\r\n\r\n  if (!newArray) {\r\n    return array;\r\n  }\r\n\r\n  newArray.forEach(element => {\r\n    const index = array.findIndex(({ id }) => id === element.id);\r\n\r\n    if (index === -1) {\r\n      array.push(element);\r\n    } else {\r\n      array[index] = element;\r\n    }\r\n  });\r\n\r\n  return array;\r\n};\r\n","/* @flow */\r\n\r\nimport * as T from '../actions/types';\r\nimport mergeEntities from './mergeEntities';\r\n\r\nconst initialState = {\r\n  // Accounts.\r\n  brokerageAccountId: '',\r\n\r\n  // Authorization.\r\n  accessToken: '',\r\n  areTokensRequested: false,\r\n  isAuthorized: false,\r\n  refreshToken: '',\r\n  tokensError: '',\r\n\r\n  // Diff.\r\n  accounts: [],\r\n  diffError: '',\r\n  diffServerTimestamp: 0,\r\n  instruments: [],\r\n  isDiffRequested: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    // Accounts.\r\n    case T.BROKERAGE_ACCOUNT_SET:\r\n      return {\r\n        ...state,\r\n        brokerageAccountId: payload,\r\n      };\r\n\r\n    // Authorization.\r\n    case T.ACCESS_TOKEN_SET:\r\n      return {\r\n        ...state,\r\n        isAuthorized: true,\r\n      };\r\n\r\n    case T.TOKENS_FAILED:\r\n      return {\r\n        ...state,\r\n        accessToken: '',\r\n        areTokensRequested: false,\r\n        isAuthorized: false,\r\n        refreshToken: '',\r\n        tokensError: payload,\r\n      };\r\n\r\n    case T.TOKENS_RECEIVED:\r\n      return {\r\n        ...state,\r\n        accessToken: payload.access_token,\r\n        areTokensRequested: false,\r\n        refreshToken: payload.refresh_token,\r\n        tokensError: '',\r\n      };\r\n\r\n    case T.TOKENS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        areTokensRequested: true,\r\n      };\r\n\r\n    case T.LOGGED_OUT:\r\n      return initialState;\r\n\r\n    // Diff.\r\n    case T.DIFF_FAILED:\r\n      return {\r\n        ...state,\r\n        diffError: payload,\r\n        isDiffRequested: false,\r\n      };\r\n\r\n    case T.DIFF_RECEIVED:\r\n      return {\r\n        ...state,\r\n        accounts: mergeEntities(state.accounts, payload.account),\r\n        diffError: '',\r\n        diffServerTimestamp: payload.serverTimestamp,\r\n        instruments: mergeEntities(state.instruments, payload.instrument),\r\n        isDiffRequested: false,\r\n      };\r\n\r\n    case T.DIFF_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isDiffRequested: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { firebaseReducer as firebase } from 'react-redux-firebase';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport app from 'App/reducer';\r\nimport portfolio from 'Portfolio/reducer';\r\nimport stocks from 'Stocks/reducer';\r\nimport zenMoney from 'ZenMoney/reducer';\r\n\r\nexport default combineReducers({\r\n  app,\r\n  firebase,\r\n  portfolio,\r\n  stocks,\r\n  zenMoney,\r\n});\r\n","/* @flow */\r\n\r\n// Accounts.\r\nexport const BROKERAGE_ACCOUNT_SET = 'BROKERAGE_ACCOUNT_SET';\r\n\r\n// Authorization.\r\nexport const ACCESS_TOKEN_SET = 'ACCESS_TOKEN_SET';\r\nexport const LOGGED_OUT = 'LOGGED_OUT';\r\nexport const TOKENS_FAILED = 'TOKENS_FAILED';\r\nexport const TOKENS_RECEIVED = 'TOKENS_RECEIVED';\r\nexport const TOKENS_REQUESTED = 'TOKENS_REQUESTED';\r\n\r\n// Diff.\r\nexport const DIFF_FAILED = 'DIFF_FAILED';\r\nexport const DIFF_RECEIVED = 'DIFF_RECEIVED';\r\nexport const DIFF_REQUESTED = 'DIFF_REQUESTED';\r\n","/* @flow */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from 'App/components/App';\r\nimport createStore from 'App/lib/store/createStore';\r\n\r\nimport reducer from './reducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst container = document.getElementById('root');\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  container,\r\n);\r\n\r\nserviceWorker.register();\r\n","/* @flow */\r\n\r\nimport firebase from 'firebase';\r\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport * as C from '../../../constants';\r\n\r\nexport default (reducer) => {\r\n  firebase.initializeApp({\r\n    apiKey: C.FIREBASE_API_KEY,\r\n    authDomain: C.FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: C.FIREBASE_DATABASE_URL,\r\n    projectId: C.FIREBASE_PROJECT_ID,\r\n    storageBucket: C.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: C.FIREBASE_MESSAGING_SENDER_ID,\r\n  });\r\n\r\n  const middleware = [\r\n    thunk.withExtraArgument(getFirebase),\r\n  ];\r\n\r\n  const composeEnhancers = (typeof window === 'object'\r\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose);\r\n\r\n  const enhancer = composeEnhancers(\r\n    reactReduxFirebase(firebase, { userProfile: C.FIREBASE_USERS_PATH }),\r\n    applyMiddleware(...middleware),\r\n  );\r\n\r\n  return createStore(reducer, enhancer);\r\n};\r\n"],"sourceRoot":""}