{"version":3,"sources":["enhancers/withStockQuotesUpdater.js","enhancers/withAuth.js","components/Amount/Amount.js","components/Amount/index.js","components/Amount/Amount.enhancer.js","components/AccountItem/index.js","components/AccountItem/AccountItem.js","components/AccountsSummary/AccountsSummary.js","lib/stocks/index.js","components/AccountsSummary/index.js","components/AccountsSummary/AccountsSummary.enhancer.js","components/AccountsList/AccountsList.js","lib/IEX/instance.js","lib/IEX/IEX.js","lib/ZenMoney/instance.js","lib/ZenMoney/ZenMoney.js","actions/index.js","constants.js","components/AccountsList/AccountsList.enhancer.js","actions/types.js","components/AccountsList/index.js","components/LogoutButton/LogoutButton.js","components/LogoutButton/LogoutButton.enhancer.js","components/LogoutButton/index.js","components/Stock/Stock.js","enhancers/withStockLogoBySymbol.js","enhancers/withStockQuoteBySymbol.js","components/Stock/index.js","components/Stock/Stock.enhancer.js","components/Porfolio/Portfolio.js","components/Porfolio/Portfolio.enhancer.js","components/Porfolio/index.js","components/App/App.js","components/Authorize/Authorize.js","components/Authorize/Authorize.enhancer.js","components/Authorize/index.js","components/App/App.enhancer.js","components/App/index.js","reducer/index.js","serviceWorker.js","index.js","lib/store/createStore.js"],"names":["digest","notAuthorizedComponent","Amount","_ref","instrument","value","react","toFixed","replace","symbol","enhance","connect","_ref2","diff","instrumentId","find","_ref3","id","undefined","account","title","components_Amount","balance","AccountsSummary","calculatePortfolioBalance","portfolio","stockQuotes","map","amount","quote","extractData","getResourceById","iexRealtimePrice","reduce","a","b","compose","brokerageAccountId","instruments","withProps","accounts","accountInstrumentId","accountInstrument","_ref4","rate","AccountsList","setBrokerageAccount","components_AccountsSummary","key","components_AccountItem","onClick","instance","IEX","url","arguments","length","Object","classCallCheck","this","axios","get","concat","then","data","ZenMoney","consumerKey","consumerSecret","redirectUrl","token","location","URL","URLSearchParams","search","code","params","append","post","Authorization","currentClientTimestamp","serverTimestamp","payload","objectSpread","headers","getAuthorizationHeaders","process","fetchStockQuote","createFetchResource","dispatchReceived","dispatchFailed","iex","getStockQuote","catch","error","toString","ttl","mapDispatchToProps","dispatch","type","filter","archive","LogoutButton","handleClick","logout","withHandlers","Stock","logo","logoProgress","quoteProgress","style","color","change","changePercent","alt","src","fetchStockLogo","stockLogos","getStockLogo","lifecycle","componentDidMount","_this$props","props","componentDidUpdate","prevProps","_this$props2","isRequested","withStockLogoBySymbol","withStockQuoteBySymbol","Portfolio","addAmount","addSymbol","handleAddAmountChange","handleAddSymbolChange","handleSubmit","removeStock","onSubmit","onChange","index","components_Stock","addStock","withStateHandlers","event","parseInt","target","toUpperCase","preventDefault","App","components_AccountsList","Porfolio","components_LogoutButton","Authorize","handleAuthorize","progress","fetchTokens","zenMoney","getTokens","tokens","setAuthorizationToken","setToken","withState","accessToken","updateProgress","extractAuthorizeCode","window","getAuthorizeUrl","mapStateToProps","isAuthorized","_this","setInterval","expired","allIds","forEach","isExpired","push","console","log","componentWillUnmount","clearInterval","fetchDiff","getState","Math","round","Date","now","diffServerTimestamp","getDiff","branch","renderComponent","mapProps","objectWithoutProperties","withStockQuotesUpdater","initialState","refreshToken","createInitialState","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","container","document","getElementById","store","rootReducer","reducer","mergePersistedState","persistedState","_","assign","middleware","thunk","storage","adapter","localStorage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","apply","persistState","createStore","action","isResourceAction","repositoryReducer","access_token","refresh_token","ReactDOM","render","es","components_App","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c03e00e.chunk.js","sourcesContent":["/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle } from 'recompose';\nimport { getResourceById } from 'redux-repository/lib/repository';\nimport { isExpired } from 'redux-repository/lib/resource';\n\nimport { fetchStockQuote } from '../actions';\nimport * as C from '../constants';\n\nconst mapStateToProps = ({ stockQuotes }) => ({ stockQuotes });\n\nconst mapDispatchToProps = { fetchStockQuote };\n\nlet digest;\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      digest = setInterval(() => {\n        const { fetchStockQuote, stockQuotes } = this.props;\n        const expired = [];\n\n        stockQuotes.allIds.forEach((symbol) => {\n          const quote = getResourceById(stockQuotes, symbol);\n\n          if (isExpired(quote, C.STOCK_QUOTE_TTL)) {\n            expired.push(symbol);\n            fetchStockQuote(symbol);\n          }\n        });\n\n        console.log('Stock quotes updater working, expired:', expired);\n      }, C.STOCK_QUOTES_UPDATER_INTERVAL);\n    },\n\n    componentWillUnmount() {\n      clearInterval(digest);\n    },\n\n  }),\n);\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { branch, compose, mapProps, renderComponent } from 'recompose';\n\nconst mapStateToProps = ({ isAuthorized }) => ({ isAuthorized });\n\nexport default (notAuthorizedComponent) => compose(\n  connect(mapStateToProps),\n  branch(\n    ({ isAuthorized }) => !isAuthorized,\n    renderComponent(notAuthorizedComponent),\n  ),\n  mapProps(({ isAuthorized, ...props }) => props),\n);\n","/* @flow */\n\nimport * as React from 'react';\n\nconst Amount = ({ instrument, value }) => (\n  <span>\n    {value.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n    {instrument && instrument.symbol}\n  </span>\n);\n\nexport default Amount;\n","/* @flow */\n\nimport Amount from './Amount';\nimport enhance from './Amount.enhancer';\n\nexport default enhance(Amount);\n","/* @flow */\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({ diff }, { instrumentId }) => ({\n  instrument: (diff && diff.instrument\n    ? diff.instrument.find(({ id }) => id === instrumentId)\n    : undefined),\n});\n\nexport default connect(mapStateToProps);\n","/* @flow */\n\nimport AccountItem from './AccountItem';\nimport enhance from './AccountItem.enhancer';\n\nexport default enhance(AccountItem);\n","/* @flow */\n\nimport * as React from 'react';\n\nimport Amount from '../Amount';\n\nconst AccountItem = ({ account }) => (\n  <div>\n    <div>\n      {account.title}\n    </div>\n    <div>\n      <Amount instrumentId={account.instrument} value={account.balance} />\n    </div>\n  </div>\n);\n\nexport default AccountItem;\n","/* @flow */\n\nimport * as React from 'react';\n\nimport Amount from '../Amount';\n\nconst AccountsSummary = ({ balance, instrumentId }) => (\n  <Amount instrumentId={instrumentId} value={balance} />\n);\n\nexport default AccountsSummary;\n","/* @flow */\n\nimport { getResourceById } from 'redux-repository/lib/repository';\nimport { extractData } from 'redux-repository/lib/resource';\n\nexport const calculatePortfolioBalance = (portfolio, stockQuotes) => {\n  return portfolio\n    .map(({ amount, symbol }) => {\n      const quote = extractData(getResourceById(stockQuotes, symbol));\n\n      return (quote && quote.iexRealtimePrice\n        ? amount * quote.iexRealtimePrice\n        : 0);\n    })\n    .reduce((a, b) => a + b, 0);\n};\n","/* @flow */\n\nimport AccountsSummary from './AccountsSummary';\nimport enhance from './AccountsSummary.enhancer';\n\nexport default enhance(AccountsSummary);\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, withProps } from 'recompose';\n\nimport { calculatePortfolioBalance } from '../../lib/stocks';\n\nconst mapStateToProps = ({\n  brokerageAccountId, diff, portfolio, stockQuotes,\n}) => ({\n  brokerageAccountId,\n  instruments: diff && diff.instrument ? diff.instrument : [],\n  portfolio,\n  stockQuotes,\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withProps(({\n    accounts, brokerageAccountId, instrumentId, instruments, portfolio,\n    stockQuotes,\n  }) => {\n    const instrument = instruments.find(({ id }) => id === instrumentId);\n\n    const balanceByAccounts = accounts.map((account) => {\n      let { balance, instrument: accountInstrumentId } = account;\n\n      if (account.id === brokerageAccountId) {\n        balance = calculatePortfolioBalance(portfolio, stockQuotes);\n        accountInstrumentId = 1; // Hardcode dollar for brokerage account.\n      }\n\n      if (accountInstrumentId === instrumentId) {\n        return balance;\n      }\n\n      const accountInstrument = instruments\n        .find(({ id }) => id === accountInstrumentId);\n\n      return balance / instrument.rate * accountInstrument.rate;\n    });\n\n    return {\n      balance: balanceByAccounts.reduce((a, b) => a + b, 0),\n    };\n  }),\n);\n","/* @flow */\n\nimport * as React from 'react';\n\nimport AccountItem from '../AccountItem';\nimport AccountsSummary from '../AccountsSummary';\n\nconst AccountsList = ({\n  accounts, brokerageAccountId, setBrokerageAccount,\n}) => (\n  <div>\n    <div>\n      Total: <AccountsSummary accounts={accounts} instrumentId={2} />\n    </div>\n    <ul>\n      {accounts.map(account => (\n        <li key={account.id}>\n\n          {account.id === brokerageAccountId && '*'}\n\n          <AccountItem account={account} />\n\n          <button onClick={() => setBrokerageAccount(\n            account.id !== brokerageAccountId ? account.id : '',\n          )}>\n            {account.id !== brokerageAccountId ? 'Brokerage' : 'Not brokerage'}\n          </button>\n\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default AccountsList;\n","/* @flow */\n\nimport IEX from './IEX';\n\nconst instance = new IEX();\n\nexport default instance;\n","/* @flow */\n\nimport axios from 'axios';\n\nexport default class IEX {\n  constructor(url = 'https://api.iextrading.com/1.0') {\n    this.url = url;\n  }\n\n  getStockLogo(symbol) {\n    return axios.get(`${this.url}/stock/${symbol}/logo`)\n      .then(({ data }) => data.url);\n  }\n\n  getStockQuote(symbol) {\n    return axios.get(`${this.url}/stock/${symbol}/quote`)\n      .then(({ data }) => data);\n  }\n};\n","/* @flow */\n\nimport ZenMoney from './ZenMoney';\n\nconst instance = new ZenMoney(\n  process.env.REACT_APP_ZENMONEY_CONSUMER_KEY,\n  process.env.REACT_APP_ZENMONEY_CONSUMER_SECRET,\n  process.env.REACT_APP_ZENMONEY_REDIRECT_URL,\n);\n\nexport default instance;\n","/* @flow */\n\nimport axios from 'axios';\n\nexport default class ZenMoney {\n  constructor(consumerKey, consumerSecret, redirectUrl) {\n    this.consumerKey = consumerKey;\n    this.consumerSecret = consumerSecret;\n    this.redirectUrl = redirectUrl;\n  }\n\n  setToken(token) {\n    this.token = token;\n\n    return this;\n  }\n\n  getAuthorizeUrl() {\n    return `https://api.zenmoney.ru/oauth2/authorize?client_id=${this.consumerKey}&redirect_uri=${this.redirectUrl}&response_type=code`;\n  }\n\n  extractAuthorizeCode(location) {\n    const url = new URL(location);\n    const params = new URLSearchParams(url.search);\n\n    return params.get('code');\n  }\n\n  getTokens(code) {\n    const params = new URLSearchParams();\n\n    params.append('client_id', this.consumerKey);\n    params.append('client_secret', this.consumerSecret);\n    params.append('code', code);\n    params.append('grant_type', 'authorization_code');\n    params.append('redirect_uri', this.redirectUrl);\n\n    return axios.post('https://api.zenmoney.ru/oauth2/token', params)\n      .then(({ data }) => data);\n  }\n\n  getAuthorizationHeaders() {\n    return { Authorization: `Bearer ${this.token}` };\n  }\n\n  getDiff(currentClientTimestamp, serverTimestamp, payload = {}) {\n    return axios.post(\n      'https://api.zenmoney.ru/v8/diff',\n      {\n        currentClientTimestamp,\n        serverTimestamp,\n        ...payload,\n      },\n      {\n        headers: this.getAuthorizationHeaders(),\n      },\n    )\n      .then(({ data }) => data);\n  }\n}\n","/* @flow */\n\nimport { createFetchResource } from 'redux-repository/lib/actions';\n\nimport * as C from '../constants';\nimport iex from '../lib/IEX/instance';\nimport zenMoney from '../lib/ZenMoney/instance';\nimport * as T from './types';\n\nexport const addStock = (symbol, amount) => dispatch => {\n  dispatch({ payload: { amount, symbol }, type: T.STOCK_ADDED });\n};\n\nexport const fetchDiff = () => (dispatch, getState) => {\n  dispatch({ type: T.DIFF_REQUESTED });\n\n  const currentClientTimestamp = Math.round(Date.now() / 1000);\n  const serverTimestamp = getState().diffServerTimestamp;\n\n  zenMoney.getDiff(currentClientTimestamp, serverTimestamp)\n    .then(tokens => {\n      dispatch({ payload: tokens, type: T.DIFF_RECEIVED });\n    });\n};\n\nexport const fetchStockLogo = symbol => createFetchResource(\n  C.STOCK_LOGO_RESOURCE_NAME,\n  symbol,\n  ({ stockLogos }) => stockLogos,\n  (dispatchReceived, dispatchFailed) => {\n    iex.getStockLogo(symbol)\n      .then(data => dispatchReceived(data))\n      .catch(error => dispatchFailed(error.toString()));\n  },\n  { ttl: C.STOCK_LOGO_TTL },\n);\n\nexport const fetchStockQuote = symbol => createFetchResource(\n  C.STOCK_QUOTE_RESOURCE_NAME,\n  symbol,\n  ({ stockQuotes }) => stockQuotes,\n  (dispatchReceived, dispatchFailed) => {\n    iex.getStockQuote(symbol)\n      .then(data => dispatchReceived(data))\n      .catch(error => dispatchFailed(error.toString()));\n  },\n  { ttl: C.STOCK_QUOTE_TTL },\n);\n\nexport const fetchTokens = code => dispatch => {\n  dispatch({ type: T.TOKENS_REQUESTED });\n\n  zenMoney.getTokens(code)\n    .then(tokens => {\n      dispatch({ payload: tokens, type: T.TOKENS_RECEIVED });\n    });\n};\n\nexport const logout = () => dispatch => {\n  dispatch({ type: T.LOGGED_OUT });\n};\n\nexport const removeStock = (symbol) => dispatch => {\n  dispatch({ payload: symbol, type: T.STOCK_REMOVED });\n};\n\nexport const setAuthorizationToken = token => dispatch => {\n  zenMoney.setToken(token);\n  dispatch({ type: T.AUTHORIZATION_TOKEN_SET });\n};\n\nexport const setBrokerageAccount = id => dispatch => {\n  dispatch({ payload: id, type: T.BROKERAGE_ACCOUNT_SET });\n};\n","/* @flow */\n\nexport const STOCK_LOGO_RESOURCE_NAME = 'stocks/logos';\nexport const STOCK_LOGO_TTL = 7 * 24 * 60 * 60 * 1000; // 1 week\n\nexport const STOCK_QUOTE_RESOURCE_NAME = 'stocks/quotes';\nexport const STOCK_QUOTE_TTL = 5 * 60 * 1000; // 5 min\n\nexport const STOCK_QUOTES_UPDATER_INTERVAL = 30 * 1000; // 30 sec\n","/* @flow */\n\nimport { connect } from 'react-redux';\n\nimport { setBrokerageAccount } from '../../actions';\n\nconst mapStateToProps = ({ brokerageAccountId, diff }) => ({\n  accounts: (diff && diff.account\n    ? diff.account.filter(account => (\n      account.archive === false && account.type !== 'debt'\n    ))\n    : []),\n  brokerageAccountId,\n});\n\nconst mapDispatchToProps = { setBrokerageAccount };\n\nexport default connect(mapStateToProps, mapDispatchToProps);\n","/* @flow */\n\nexport const AUTHORIZATION_TOKEN_SET = 'AUTHORIZATION_TOKEN_SET';\nexport const BROKERAGE_ACCOUNT_SET = 'BROKERAGE_ACCOUNT_SET';\nexport const DIFF_RECEIVED = 'DIFF_RECEIVED';\nexport const DIFF_REQUESTED = 'DIFF_REQUESTED';\nexport const LOGGED_OUT = 'LOGGED_OUT';\nexport const STOCK_ADDED = 'STOCK_ADDED';\nexport const STOCK_REMOVED = 'STOCK_REMOVED';\nexport const TOKENS_RECEIVED = 'TOKENS_RECEIVED';\nexport const TOKENS_REQUESTED = 'TOKENS_REQUESTED';\n","/* @flow */\n\nimport AccountsList from './AccountsList';\nimport enhance from './AccountsList.enhancer';\n\nexport default enhance(AccountsList);\n","/* @flow */\n\nimport * as React from 'react';\n\nconst LogoutButton = ({ handleClick }) => (\n  <button onClick={handleClick}>Logout</button>\n);\n\nexport default LogoutButton;\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers } from 'recompose';\n\nimport { logout } from '../../actions';\n\nconst mapDispatchToProps = { logout };\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n  withHandlers({\n\n    handleClick: ({ logout }) => () => {\n      logout();\n    },\n\n  }),\n);\n","/* @flow */\n\nimport LogoutButton from './LogoutButton';\nimport enhance from './LogoutButton.enhancer';\n\nexport default enhance(LogoutButton);\n","/* @flow */\n\nimport * as React from 'react';\n\nimport Amount from '../Amount';\n\nconst Stock = ({\n  amount, logo, logoProgress, quote, quoteProgress, symbol,\n}) => (\n  <span>\n\n    {symbol}\n\n    {(logoProgress || quoteProgress) && 'Progress...'}\n\n    {quote && (\n      <React.Fragment>\n        <div>\n          <Amount instrumentId={1} value={quote.iexRealtimePrice} />\n          x\n          {amount}\n          =\n          <Amount instrumentId={1} value={amount * quote.iexRealtimePrice} />\n        </div>\n        <div style={{ color: quote.change >= 0 ? 'green' : 'red' }}>\n          <Amount instrumentId={1} value={amount * quote.change} />\n          {(quote.changePercent * 100).toFixed(2)}%\n        </div>\n      </React.Fragment>\n    )}\n\n    {logo && (\n      <img alt=\"\" src={logo} />\n    )}\n\n  </span>\n);\n\nexport default Stock;\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle, withProps } from 'recompose';\nimport { getResourceById } from 'redux-repository/lib/repository';\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\n\nimport { fetchStockLogo } from '../actions';\n\nconst mapStateToProps = ({ stockLogos }) => ({ stockLogos });\n\nconst mapDispatchToProps = { fetchStockLogo };\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      const { fetchStockLogo, symbol } = this.props;\n\n      if (symbol) {\n        fetchStockLogo(symbol);\n      }\n    },\n\n    componentDidUpdate(prevProps) {\n      const { fetchStockLogo, symbol } = this.props;\n\n      if (symbol && symbol !== prevProps.symbol) {\n        fetchStockLogo(symbol);\n      }\n    },\n\n  }),\n  withProps(({ stockLogos, symbol }) => {\n    const logo = getResourceById(stockLogos, symbol);\n\n    return {\n      logo: extractData(logo),\n      logoProgress: isRequested(logo),\n    };\n  }),\n);\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle, withProps } from 'recompose';\nimport { getResourceById } from 'redux-repository/lib/repository';\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\n\nimport { fetchStockQuote } from '../actions';\n\nconst mapStateToProps = ({ stockQuotes }) => ({ stockQuotes });\n\nconst mapDispatchToProps = { fetchStockQuote };\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      const { fetchStockQuote, symbol } = this.props;\n\n      if (symbol) {\n        fetchStockQuote(symbol);\n      }\n    },\n\n    componentDidUpdate(prevProps) {\n      const { fetchStockQuote, symbol } = this.props;\n\n      if (symbol && symbol !== prevProps.symbol) {\n        fetchStockQuote(symbol);\n      }\n    },\n\n  }),\n  withProps(({ stockQuotes, symbol }) => {\n    const quote = getResourceById(stockQuotes, symbol);\n\n    return {\n      quote: extractData(quote),\n      quoteProgress: isRequested(quote),\n    };\n  }),\n);\n","/* @flow */\n\nimport Stock from './Stock';\nimport enhance from './Stock.enhancer';\n\nexport default enhance(Stock);\n","/* @flow */\n\nimport { compose } from 'recompose';\n\nimport withStockLogoBySymbol from '../../enhancers/withStockLogoBySymbol';\nimport withStockQuoteBySymbol from '../../enhancers/withStockQuoteBySymbol';\n\nexport default compose(\n  withStockLogoBySymbol,\n  withStockQuoteBySymbol,\n);\n","/* @flow */\n\nimport * as React from 'react';\n\nimport Amount from '../Amount';\nimport Stock from '../Stock';\n\nconst Portfolio = ({\n  addAmount, addSymbol, balance, handleAddAmountChange, handleAddSymbolChange,\n  handleSubmit, portfolio, removeStock,\n}) => (\n  <div>\n\n    <form onSubmit={handleSubmit}>\n      <input onChange={handleAddSymbolChange} type=\"text\" value={addSymbol} />\n      <input onChange={handleAddAmountChange} type=\"number\" value={addAmount} />\n      <button type=\"submit\">Add</button>\n    </form>\n\n    <div>\n      Total: <Amount instrumentId={1} value={balance} />\n    </div>\n\n    <ul>\n      {portfolio.map(({ amount, symbol }, index) => (\n        <li key={index}>\n          <Stock amount={amount} symbol={symbol} />\n          <button onClick={() => removeStock(symbol)}>Remove</button>\n        </li>\n      ))}\n    </ul>\n\n  </div>\n);\n\nexport default Portfolio;\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport {\n  compose, withHandlers, withProps, withStateHandlers,\n} from 'recompose';\n\nimport { addStock, removeStock } from '../../actions';\nimport { calculatePortfolioBalance } from '../../lib/stocks';\n\nconst mapStateToProps = ({ portfolio, stockQuotes }) => ({\n  portfolio, stockQuotes,\n});\n\nconst mapDispatchToProps = { addStock, removeStock };\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStateHandlers(\n    {\n      addAmount: 1,\n      addSymbol: '',\n    },\n    {\n      handleAddAmountChange: () => (event) => ({\n        addAmount: (parseInt(event.target.value) > 0\n          ? parseInt(event.target.value)\n          : 1),\n      }),\n      handleAddSymbolChange: () => (event) => ({\n        addSymbol: event.target.value.toUpperCase(),\n      }),\n    },\n  ),\n  withHandlers({\n\n    handleSubmit: ({ addAmount, addStock, addSymbol }) => (event) => {\n      event.preventDefault();\n      addStock(addSymbol, addAmount);\n    },\n\n  }),\n  withProps(({ portfolio, stockQuotes }) => ({\n    balance: calculatePortfolioBalance(portfolio, stockQuotes),\n  })),\n);\n","/* @flow */\n\nimport Portfolio from './Portfolio';\nimport enhance from './Portfolio.enhancer';\n\nexport default enhance(Portfolio);\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport AccountsList from '../AccountsList';\r\nimport LogoutButton from '../LogoutButton';\r\nimport Portfolio from '../Porfolio';\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <AccountsList />\r\n    <Portfolio />\r\n    <LogoutButton />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n","/* @flow */\n\nimport * as React from 'react';\n\nconst Authorize = ({ handleAuthorize, progress }) => (\n  <div>\n    {progress\n      ? <span>Progress...</span>\n      : <button onClick={handleAuthorize}>Sign in</button>}\n  </div>\n);\n\nexport default Authorize;\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle, withState, withHandlers } from 'recompose';\n\nimport { fetchTokens, setAuthorizationToken } from '../../actions';\nimport zenMoney from '../../lib/ZenMoney/instance';\n\nconst mapStateToProps = ({ accessToken }) => ({ accessToken });\n\nconst mapDispatchToProps = { fetchTokens, setAuthorizationToken };\n\nexport default compose(\n  withState('progress', 'updateProgress', false),\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      const {\n        accessToken, fetchTokens, setAuthorizationToken, updateProgress,\n      } = this.props;\n\n      const code = zenMoney.extractAuthorizeCode(window.location);\n\n      if (accessToken || code) {\n        updateProgress(true);\n\n        if (accessToken) {\n          setAuthorizationToken(accessToken);\n        } else {\n          fetchTokens(code);\n        }\n      }\n    },\n\n    componentDidUpdate(prevProps) {\n      const { accessToken, setAuthorizationToken, updateProgress } = this.props;\n\n      if (accessToken && accessToken !== prevProps.accessToken) {\n        updateProgress(true);\n        setAuthorizationToken(accessToken);\n      }\n    },\n\n  }),\n  withHandlers({\n\n    handleAuthorize: ({ updateProgress }) => () => {\n      updateProgress(true);\n      window.location = zenMoney.getAuthorizeUrl();\n    },\n\n  }),\n);\n","/* @flow */\n\nimport Authorize from './Authorize';\nimport enhance from './Authorize.enhancer';\n\nexport default enhance(Authorize);\n","/* @flow */\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle } from 'recompose';\n\nimport { fetchDiff } from '../../actions';\nimport Authorize from '../Authorize';\nimport withAuth from '../../enhancers/withAuth';\nimport withStockQuotesUpdater from '../../enhancers/withStockQuotesUpdater';\n\nconst mapStateToProps = ({ diff }) => ({ diff });\n\nconst mapDispatchToProps = { fetchDiff };\n\nexport default compose(\n  withAuth(Authorize),\n  withStockQuotesUpdater,\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      const { fetchDiff } = this.props;\n\n      fetchDiff();\n    },\n\n  }),\n);\n","/* @flow */\n\nimport App from './App';\nimport enhance from './App.enhancer';\n\nexport default enhance(App);\n","/* @flow */\n\nimport _ from 'lodash';\nimport {\n  isResourceAction, repositoryReducer,\n} from 'redux-repository/lib/reducer';\nimport { createInitialState } from 'redux-repository/lib/repository';\n\nimport * as T from '../actions/types';\nimport * as C from '../constants';\n\nconst initialState = {\n  accessToken: '',\n  brokerageAccountId: '',\n  diff: null,\n  diffServerTimestamp: 0,\n  isAuthorized: false,\n  portfolio: [],\n  refreshToken: '',\n  stockLogos: createInitialState(),\n  stockQuotes: createInitialState(),\n};\n\nexport default (state = initialState, action) => {\n  if (isResourceAction(C.STOCK_LOGO_RESOURCE_NAME, action)) {\n    return {\n      ...state,\n      stockLogos: repositoryReducer(state.stockLogos, action),\n    };\n  }\n\n  if (isResourceAction(C.STOCK_QUOTE_RESOURCE_NAME, action)) {\n    return {\n      ...state,\n      stockQuotes: repositoryReducer(state.stockQuotes, action),\n    };\n  }\n\n  switch (action.type) {\n    case T.AUTHORIZATION_TOKEN_SET:\n      return {\n        ...state,\n        isAuthorized: true,\n      };\n\n    case T.BROKERAGE_ACCOUNT_SET:\n      return {\n        ...state,\n        brokerageAccountId: action.payload,\n      };\n\n    case T.DIFF_RECEIVED:\n      return {\n        ...state,\n        // TODO: Keep only needed data.\n        diff: _.assign({}, state.diff, action.payload),\n        diffServerTimestamp: action.payload.serverTimestamp,\n      };\n\n    case T.LOGGED_OUT:\n      return initialState;\n\n    case T.STOCK_ADDED:\n      return {\n        ...state,\n        portfolio: state.portfolio.concat([action.payload]),\n      };\n\n    case T.STOCK_REMOVED:\n      return {\n        ...state,\n        portfolio: state.portfolio.filter(({ symbol }) => (\n          symbol !== action.payload\n        )),\n      };\n\n    case T.TOKENS_RECEIVED:\n      return {\n        ...state,\n        accessToken: action.payload.access_token,\n        refreshToken: action.payload.refresh_token,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* @flow */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* @flow */\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport createStore from './lib/store/createStore';\nimport reducer from './reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst container = document.getElementById('root');\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  container,\n);\n\nserviceWorker.register();\n","/* @flow */\n\nimport _ from 'lodash';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport persistState, { mergePersistedState } from 'redux-localstorage';\nimport adapter from 'redux-localstorage/lib/adapters/localStorage';\nimport thunk from 'redux-thunk';\n\nexport default (rootReducer) => {\n  const reducer = compose(\n    mergePersistedState((initialState, persistedState) => (\n      _.assign({}, initialState, persistedState, { isAuthorized: false })\n    )),\n  )(rootReducer);\n\n  const middleware = [thunk];\n\n  const storage = adapter(window.localStorage);\n\n  const composeEnhancers = (typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose);\n\n  const enhancer = composeEnhancers(\n    applyMiddleware(...middleware),\n    persistState(storage, process.env.REACT_APP_REDUX_STORAGE_KEY),\n  );\n\n  return createStore(reducer, enhancer);\n};\n"],"sourceRoot":""}