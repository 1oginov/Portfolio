{"version":3,"sources":["enhancers/withAuth.js","enhancers/withStockQuotesUpdater.js","components/portfolio/AddPositionForm/AddPositionForm.js","components/portfolio/AddPositionForm/AddPositionForm.enhancer.js","actions/portfolio/index.js","actions/portfolio/types.js","components/portfolio/AddPositionForm/index.js","components/stocks/Stock/Stock.js","lib/IEX/instance.js","lib/IEX/IEX.js","actions/stocks/index.js","constants.js","enhancers/withStockLogoBySymbol.js","enhancers/withStockQuoteBySymbol.js","components/stocks/Stock/index.js","components/stocks/Stock/Stock.enhancer.js","components/portfolio/Porfolio/Portfolio.js","lib/stocks/index.js","components/portfolio/Porfolio/Portfolio.enhancer.js","components/portfolio/Porfolio/index.js","components/zenMoney/Amount/Amount.js","components/zenMoney/Amount/index.js","components/zenMoney/Amount/Amount.enhancer.js","components/zenMoney/AccountItem/index.js","components/zenMoney/AccountItem/AccountItem.js","components/zenMoney/AccountsSummary/AccountsSummary.js","components/zenMoney/AccountsSummary/index.js","components/zenMoney/AccountsSummary/AccountsSummary.enhancer.js","components/zenMoney/AccountsList/AccountsList.js","lib/ZenMoney/instance.js","lib/ZenMoney/ZenMoney.js","components/zenMoney/AccountsList/AccountsList.enhancer.js","actions/zenMoney/index.js","actions/zenMoney/types.js","components/zenMoney/AccountsList/index.js","components/zenMoney/LogoutButton/LogoutButton.js","components/zenMoney/LogoutButton/LogoutButton.enhancer.js","components/zenMoney/LogoutButton/index.js","components/zenMoney/View/View.js","components/zenMoney/Authorize/Authorize.js","components/zenMoney/Authorize/Authorize.enhancer.js","components/zenMoney/Authorize/index.js","components/zenMoney/View/View.enhancer.js","components/zenMoney/View/index.js","components/app/App/App.js","components/app/App/index.js","reducer/portfolio/index.js","reducer/stocks/index.js","reducer/zenMoney/mergeEntities.js","reducer/zenMoney/index.js","reducer/index.js","serviceWorker.js","index.js","lib/store/createStore.js","reducer/mergeReducer.js"],"names":["notAuthorizedComponent","digest","AddPositionForm","_ref","amount","date","handleAmountChange","handleDateChange","handlePriceChange","handleSymbolChange","handleSubmit","price","symbol","react","onSubmit","onChange","type","value","min","step","mapDispatchToProps","openPosition","dispatch","payload","id","uuid","formatDate","toISOString","slice","enhance","compose","connect","withStateHandlers","Date","event","parseInt","target","parseFloat","toUpperCase","withHandlers","preventDefault","Stock","logo","logoProgress","quote","quoteProgress","iexRealtimePrice","latestPrice","style","color","change","changePercent","toFixed","alt","src","instance","IEX","url","arguments","length","undefined","Object","classCallCheck","this","axios","get","concat","then","data","_ref2","fetchQuote","createFetchResource","stocks","quotes","dispatchReceived","dispatchFailed","iex","getStockQuote","catch","error","toString","ttl","fetchLogo","logos","getStockLogo","withStockLogoBySymbol","lifecycle","componentDidMount","_this$props","props","componentDidUpdate","prevProps","_this$props2","mapProps","objectWithoutProperties","getResourceById","objectSpread","extractData","isRequested","withStockQuoteBySymbol","Portfolio","balance","closePosition","positions","portfolio_AddPositionForm","map","index","key","stocks_Stock","onClick","calculatePositionsValue","reduce","a","b","portfolio","withProps","Amount","instrument","replace","instruments","zenMoney","instrumentId","find","_ref3","account","title","zenMoney_Amount","AccountsSummary","_ref$zenMoney","brokerageAccountId","accounts","accountInstrumentId","accountInstrument","_ref4","rate","AccountsList","setBrokerageAccount","zenMoney_AccountsSummary","zenMoney_AccountItem","ZenMoney","consumerKey","consumerSecret","redirectUrl","token","accessToken","location","URL","URLSearchParams","search","code","params","append","post","Authorization","currentClientTimestamp","serverTimestamp","headers","getAuthorizationHeader","process","filter","archive","LogoutButton","handleClick","logout","View","zenMoney_AccountsList","zenMoney_LogoutButton","Authorize","handleAuthorize","progress","fetchTokens","getTokens","tokens","console","setAccessToken","withState","updateProgress","extractAuthorizeCode","window","getAuthorizeUrl","mapStateToProps","isAuthorized","fetchDiff","getState","Math","round","now","diffServerTimestamp","getDiff","branch","renderComponent","App","zenMoney_View","Porfolio","_this","setInterval","expired","allIds","forEach","isExpired","push","log","componentWillUnmount","clearInterval","initialState","createInitialState","mergeEntities","oldArray","newArray","array","element","findIndex","areTokensRequested","refreshToken","tokensError","diffError","isDiffRequested","combineReducers","state","action","isResourceAction","repositoryReducer","access_token","refresh_token","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","container","document","getElementById","store","rootReducer","mergeReducer","reducer","mergePersistedState","middleware","thunk","storage","adapter","localStorage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","apply","persistState","createStore","persistedState","_","merge","ReactDOM","render","es","app_App","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6f34be06.chunk.js","sourcesContent":["/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { branch, compose, mapProps, renderComponent } from 'recompose';\r\n\r\nconst mapStateToProps = ({ zenMoney: { isAuthorized } }) => ({ isAuthorized });\r\n\r\nexport default (notAuthorizedComponent) => compose(\r\n  connect(mapStateToProps),\r\n  branch(\r\n    ({ isAuthorized }) => !isAuthorized,\r\n    renderComponent(notAuthorizedComponent),\r\n  ),\r\n  mapProps(({ isAuthorized, ...props }) => props),\r\n);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle, mapProps } from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { isExpired } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchQuote } from '../actions/stocks';\r\nimport * as C from '../constants';\r\n\r\nconst mapStateToProps = ({ stocks: { quotes } }) => ({ quotes });\r\n\r\nconst mapDispatchToProps = { fetchQuote };\r\n\r\nlet digest;\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      digest = setInterval(() => {\r\n        const { fetchQuote, quotes } = this.props;\r\n        const expired = [];\r\n\r\n        quotes.allIds.forEach((symbol) => {\r\n          const quote = getResourceById(quotes, symbol);\r\n\r\n          if (isExpired(quote, C.STOCKS_QUOTES_TTL)) {\r\n            expired.push(symbol);\r\n            fetchQuote(symbol);\r\n          }\r\n        });\r\n\r\n        console.log('Stock quotes updater working, expired:', expired);\r\n      }, C.STOCKS_QUOTES_UPDATER_INTERVAL);\r\n    },\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(digest);\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchQuote, quotes, ...props }) => props),\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst AddPositionForm = ({\r\n  amount, date, handleAmountChange, handleDateChange, handlePriceChange,\r\n  handleSymbolChange, handleSubmit, price, symbol,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n\r\n    <input onChange={handleSymbolChange} type=\"text\" value={symbol} />\r\n\r\n    <input\r\n      min=\"0\"\r\n      onChange={handlePriceChange}\r\n      step=\"0.01\"\r\n      type=\"number\"\r\n      value={price}\r\n    />\r\n\r\n    <input min=\"1\" onChange={handleAmountChange} type=\"number\" value={amount} />\r\n\r\n    <input onChange={handleDateChange} type=\"date\" value={date} />\r\n\r\n    <button type=\"submit\">Add</button>\r\n\r\n  </form>\r\n);\r\n\r\nexport default AddPositionForm;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withHandlers, withStateHandlers } from 'recompose';\r\n\r\nimport { openPosition } from '../../../actions/portfolio';\r\n\r\nconst mapDispatchToProps = { openPosition };\r\n\r\nconst formatDate = date => date.toISOString().slice(0, 10);\r\n\r\nexport default compose(\r\n  connect(null, mapDispatchToProps),\r\n  withStateHandlers(\r\n    {\r\n      amount: 1,\r\n      date: formatDate(new Date()),\r\n      price: 0,\r\n      symbol: '',\r\n    },\r\n    {\r\n      handleAmountChange: () => (event) => {\r\n        const amount = parseInt(event.target.value);\r\n\r\n        return {\r\n          amount: amount > 0 ? amount : 1,\r\n        };\r\n      },\r\n      handleDateChange: () => (event) => {\r\n        const date = new Date(event.target.value);\r\n\r\n        return {\r\n          date: formatDate(date ? date : new Date()),\r\n        };\r\n      },\r\n      handlePriceChange: () => (event) => {\r\n        const price = parseFloat(event.target.value);\r\n\r\n        return {\r\n          price: price >= 0 ? price : 0,\r\n        };\r\n      },\r\n      handleSymbolChange: () => (event) => ({\r\n        symbol: event.target.value.toUpperCase(),\r\n      }),\r\n    },\r\n  ),\r\n  withHandlers({\r\n\r\n    handleSubmit: ({\r\n      amount, date, openPosition, price, symbol,\r\n    }) => (event) => {\r\n      event.preventDefault();\r\n      openPosition(symbol, price, amount, date);\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport uuid from 'uuid/v1';\r\n\r\nimport * as T from './types';\r\n\r\nexport const closePosition = id => dispatch => {\r\n  dispatch({ payload: id, type: T.POSITION_CLOSED });\r\n};\r\n\r\nexport const openPosition = (symbol, price, amount, date) => dispatch => {\r\n  dispatch({\r\n    payload: {\r\n      amount,\r\n      date,\r\n      id: uuid(),\r\n      price,\r\n      symbol,\r\n    },\r\n    type: T.POSITION_OPENED,\r\n  });\r\n};\r\n","/* @flow */\r\n\r\nexport const POSITION_CLOSED = 'POSITION_CLOSED';\r\nexport const POSITION_OPENED = 'POSITION_OPENED';\r\n","/* @flow */\r\n\r\nimport AddPositionForm from './AddPositionForm';\r\nimport enhance from './AddPositionForm.enhancer';\r\n\r\nexport default enhance(AddPositionForm);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst Stock = ({\r\n  amount, logo, logoProgress, quote, quoteProgress, symbol,\r\n}) => (\r\n  <span>\r\n\r\n    {symbol}\r\n\r\n    {(logoProgress || quoteProgress) && 'Progress...'}\r\n\r\n    {quote && (\r\n      <React.Fragment>\r\n        <div>\r\n          {quote.iexRealtimePrice ? quote.iexRealtimePrice : quote.latestPrice}\r\n          x\r\n          {amount}\r\n          =\r\n          {amount *\r\n          (quote.iexRealtimePrice ? quote.iexRealtimePrice : quote.latestPrice)}\r\n        </div>\r\n        <div style={{ color: quote.change >= 0 ? 'green' : 'red' }}>\r\n          {amount * quote.change}\r\n          {(quote.changePercent * 100).toFixed(2)}%\r\n        </div>\r\n      </React.Fragment>\r\n    )}\r\n\r\n    {logo && (\r\n      <img alt=\"\" src={logo} />\r\n    )}\r\n\r\n  </span>\r\n);\r\n\r\nexport default Stock;\r\n","/* @flow */\n\nimport IEX from './IEX';\n\nconst instance = new IEX();\n\nexport default instance;\n","/* @flow */\n\nimport axios from 'axios';\n\nexport default class IEX {\n  constructor(url = 'https://api.iextrading.com/1.0') {\n    this.url = url;\n  }\n\n  getStockLogo(symbol) {\n    return axios.get(`${this.url}/stock/${symbol}/logo`)\n      .then(({ data }) => data.url);\n  }\n\n  getStockQuote(symbol) {\n    return axios.get(`${this.url}/stock/${symbol}/quote`)\n      .then(({ data }) => data);\n  }\n};\n","/* @flow */\r\n\r\nimport { createFetchResource } from 'redux-repository/lib/actions';\r\n\r\nimport * as C from '../../constants';\r\nimport iex from '../../lib/IEX/instance';\r\n\r\nexport const fetchLogo = symbol => createFetchResource(\r\n  C.STOCKS_LOGOS_RESOURCE_NAME,\r\n  symbol,\r\n  ({ stocks: { logos } }) => logos,\r\n  (dispatchReceived, dispatchFailed) => {\r\n    iex.getStockLogo(symbol)\r\n      .then(data => dispatchReceived(data))\r\n      .catch(error => dispatchFailed(error.toString()));\r\n  },\r\n  { ttl: C.STOCKS_LOGOS_TTL },\r\n);\r\n\r\nexport const fetchQuote = symbol => createFetchResource(\r\n  C.STOCKS_QUOTES_RESOURCE_NAME,\r\n  symbol,\r\n  ({ stocks: { quotes } }) => quotes,\r\n  (dispatchReceived, dispatchFailed) => {\r\n    iex.getStockQuote(symbol)\r\n      .then(data => dispatchReceived(data))\r\n      .catch(error => dispatchFailed(error.toString()));\r\n  },\r\n  { ttl: C.STOCKS_QUOTES_TTL },\r\n);\r\n","/* @flow */\r\n\r\nexport const STOCKS_LOGOS_RESOURCE_NAME = 'stocks/logos';\r\nexport const STOCKS_LOGOS_TTL = 7 * 24 * 60 * 60 * 1000; // 1 week\r\n\r\nexport const STOCKS_QUOTES_RESOURCE_NAME = 'stocks/quotes';\r\nexport const STOCKS_QUOTES_TTL = 5 * 60 * 1000; // 5 min\r\n\r\nexport const STOCKS_QUOTES_UPDATER_INTERVAL = 30 * 1000; // 30 sec\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle, mapProps } from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchLogo } from '../actions/stocks';\r\n\r\nconst mapStateToProps = ({ stocks: { logos } }) => ({ logos });\r\n\r\nconst mapDispatchToProps = { fetchLogo };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchLogo, symbol } = this.props;\r\n\r\n      if (symbol) {\r\n        fetchLogo(symbol);\r\n      }\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { fetchLogo, symbol } = this.props;\r\n\r\n      if (symbol && symbol !== prevProps.symbol) {\r\n        fetchLogo(symbol);\r\n      }\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchLogo, logos, symbol, ...props }) => {\r\n    const logo = getResourceById(logos, symbol);\r\n\r\n    return {\r\n      logo: extractData(logo),\r\n      logoProgress: isRequested(logo),\r\n      symbol,\r\n      ...props,\r\n    };\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle, mapProps } from 'recompose';\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData, isRequested } from 'redux-repository/lib/resource';\r\n\r\nimport { fetchQuote } from '../actions/stocks';\r\n\r\nconst mapStateToProps = ({ stocks: { quotes } }) => ({ quotes });\r\n\r\nconst mapDispatchToProps = { fetchQuote };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchQuote, symbol } = this.props;\r\n\r\n      if (symbol) {\r\n        fetchQuote(symbol);\r\n      }\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { fetchQuote, symbol } = this.props;\r\n\r\n      if (symbol && symbol !== prevProps.symbol) {\r\n        fetchQuote(symbol);\r\n      }\r\n    },\r\n\r\n  }),\r\n  mapProps(({ fetchQuote, quotes, symbol, ...props }) => {\r\n    const quote = getResourceById(quotes, symbol);\r\n\r\n    return {\r\n      quote: extractData(quote),\r\n      quoteProgress: isRequested(quote),\r\n      symbol,\r\n      ...props,\r\n    };\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport Stock from './Stock';\r\nimport enhance from './Stock.enhancer';\r\n\r\nexport default enhance(Stock);\r\n","/* @flow */\r\n\r\nimport { compose } from 'recompose';\r\n\r\nimport withStockLogoBySymbol from '../../../enhancers/withStockLogoBySymbol';\r\nimport withStockQuoteBySymbol from '../../../enhancers/withStockQuoteBySymbol';\r\n\r\nexport default compose(\r\n  withStockLogoBySymbol,\r\n  withStockQuoteBySymbol,\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport AddPosition from '../AddPositionForm';\r\nimport Stock from '../../stocks/Stock';\r\n\r\nconst Portfolio = ({ balance, closePosition, positions }) => (\r\n  <div>\r\n\r\n    <AddPosition />\r\n\r\n    <div>Total: {balance}</div>\r\n\r\n    <ul>\r\n      {positions.map(({ amount, id, symbol }, index) => (\r\n        <li key={index}>\r\n          <Stock amount={amount} symbol={symbol} />\r\n          <button onClick={() => closePosition(id)}>Remove</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n\r\n  </div>\r\n);\r\n\r\nexport default Portfolio;\r\n","/* @flow */\r\n\r\nimport { getResourceById } from 'redux-repository/lib/repository';\r\nimport { extractData } from 'redux-repository/lib/resource';\r\n\r\nexport const calculatePositionsValue = (positions, quotes) => positions\r\n  .map(({ amount, symbol }) => {\r\n    const quote = extractData(getResourceById(quotes, symbol));\r\n\r\n    let price = 0;\r\n\r\n    if (quote) {\r\n      if (quote.iexRealtimePrice) {\r\n        price = quote.iexRealtimePrice;\r\n      } else if (quote.latestPrice) {\r\n        price = quote.latestPrice;\r\n      }\r\n    }\r\n\r\n    return amount * price;\r\n  })\r\n  .reduce((a, b) => a + b, 0);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withProps } from 'recompose';\r\n\r\nimport { closePosition } from '../../../actions/portfolio';\r\nimport { calculatePositionsValue } from '../../../lib/stocks';\r\n\r\nconst mapStateToProps = ({ portfolio: { positions }, stocks: { quotes } }) => ({\r\n  positions, quotes,\r\n});\r\n\r\nconst mapDispatchToProps = { closePosition };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withProps(({ positions, quotes }) => ({\r\n    balance: calculatePositionsValue(positions, quotes),\r\n  })),\r\n);\r\n","/* @flow */\r\n\r\nimport Portfolio from './Portfolio';\r\nimport enhance from './Portfolio.enhancer';\r\n\r\nexport default enhance(Portfolio);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst Amount = ({ instrument, value }) => (\r\n  instrument && value\r\n    ? (\r\n      <span>\r\n      {value.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\r\n        {instrument && instrument.symbol}\r\n    </span>\r\n    )\r\n    : null\r\n);\r\n\r\nexport default Amount;\r\n","/* @flow */\r\n\r\nimport Amount from './Amount';\r\nimport enhance from './Amount.enhancer';\r\n\r\nexport default enhance(Amount);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ({ zenMoney: { instruments } }, { instrumentId }) => ({\r\n  instrument: instruments.find(({ id }) => id === instrumentId),\r\n});\r\n\r\nexport default connect(mapStateToProps);\r\n","/* @flow */\r\n\r\nimport AccountItem from './AccountItem';\r\nimport enhance from './AccountItem.enhancer';\r\n\r\nexport default enhance(AccountItem);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport Amount from '../Amount';\r\n\r\nconst AccountItem = ({ account }) => (\r\n  <div>\r\n    <div>\r\n      {account.title}\r\n    </div>\r\n    <div>\r\n      <Amount instrumentId={account.instrument} value={account.balance} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AccountItem;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport Amount from '../Amount';\r\n\r\nconst AccountsSummary = ({ balance, instrumentId }) => (\r\n  <Amount instrumentId={instrumentId} value={balance} />\r\n);\r\n\r\nexport default AccountsSummary;\r\n","/* @flow */\r\n\r\nimport AccountsSummary from './AccountsSummary';\r\nimport enhance from './AccountsSummary.enhancer';\r\n\r\nexport default enhance(AccountsSummary);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withProps } from 'recompose';\r\n\r\nimport { calculatePositionsValue } from '../../../lib/stocks';\r\n\r\nconst mapStateToProps = ({\r\n  portfolio: { positions },\r\n  stocks: { quotes },\r\n  zenMoney: { brokerageAccountId, instruments },\r\n}) => ({\r\n  brokerageAccountId, instruments, positions, quotes,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withProps(({\r\n    accounts, brokerageAccountId, instrumentId, instruments, positions, quotes,\r\n  }) => {\r\n    const instrument = instruments.find(({ id }) => id === instrumentId);\r\n\r\n    const balanceByAccounts = accounts.map((account) => {\r\n      let { balance, instrument: accountInstrumentId } = account;\r\n\r\n      if (account.id === brokerageAccountId) {\r\n        balance = calculatePositionsValue(positions, quotes);\r\n        accountInstrumentId = 1; // Hardcode dollar for brokerage account.\r\n      }\r\n\r\n      if (accountInstrumentId === instrumentId) {\r\n        return balance;\r\n      }\r\n\r\n      const accountInstrument = instruments\r\n        .find(({ id }) => id === accountInstrumentId);\r\n\r\n      return balance / instrument.rate * accountInstrument.rate;\r\n    });\r\n\r\n    return {\r\n      balance: balanceByAccounts.reduce((a, b) => a + b, 0),\r\n    };\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport AccountItem from '../AccountItem';\r\nimport AccountsSummary from '../AccountsSummary';\r\n\r\nconst AccountsList = ({\r\n  accounts, brokerageAccountId, setBrokerageAccount,\r\n}) => (\r\n  <div>\r\n    <div>\r\n      Total: <AccountsSummary accounts={accounts} instrumentId={2} />\r\n    </div>\r\n    <ul>\r\n      {accounts.map(account => (\r\n        <li key={account.id}>\r\n\r\n          {account.id === brokerageAccountId && '*'}\r\n\r\n          <AccountItem account={account} />\r\n\r\n          <button onClick={() => setBrokerageAccount(\r\n            account.id !== brokerageAccountId ? account.id : '',\r\n          )}>\r\n            {account.id !== brokerageAccountId ? 'Brokerage' : 'Not brokerage'}\r\n          </button>\r\n\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default AccountsList;\r\n","/* @flow */\n\nimport ZenMoney from './ZenMoney';\n\nconst instance = new ZenMoney(\n  process.env.REACT_APP_ZENMONEY_CONSUMER_KEY,\n  process.env.REACT_APP_ZENMONEY_CONSUMER_SECRET,\n  process.env.REACT_APP_ZENMONEY_REDIRECT_URL,\n);\n\nexport default instance;\n","/* @flow */\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class ZenMoney {\r\n  url = 'https://api.zenmoney.ru';\r\n\r\n  constructor(consumerKey, consumerSecret, redirectUrl) {\r\n    this.consumerKey = consumerKey;\r\n    this.consumerSecret = consumerSecret;\r\n    this.redirectUrl = redirectUrl;\r\n  }\r\n\r\n  setAccessToken(token) {\r\n    this.accessToken = token;\r\n\r\n    return this;\r\n  }\r\n\r\n  getAuthorizeUrl() {\r\n    return `${this.url}/oauth2/authorize?client_id=${this.consumerKey}&redirect_uri=${this.redirectUrl}&response_type=code`;\r\n  }\r\n\r\n  extractAuthorizeCode(location) {\r\n    const url = new URL(location);\r\n    const params = new URLSearchParams(url.search);\r\n\r\n    return params.get('code');\r\n  }\r\n\r\n  getTokens(code) {\r\n    const params = new URLSearchParams();\r\n\r\n    params.append('client_id', this.consumerKey);\r\n    params.append('client_secret', this.consumerSecret);\r\n    params.append('code', code);\r\n    params.append('grant_type', 'authorization_code');\r\n    params.append('redirect_uri', this.redirectUrl);\r\n\r\n    return axios.post(`${this.url}/oauth2/token`, params)\r\n      .then(({ data }) => data);\r\n  }\r\n\r\n  getAuthorizationHeader() {\r\n    return { Authorization: `Bearer ${this.accessToken}` };\r\n  }\r\n\r\n  getDiff(currentClientTimestamp, serverTimestamp, payload = {}) {\r\n    return axios.post(\r\n      `${this.url}/v8/diff`,\r\n      {\r\n        currentClientTimestamp,\r\n        serverTimestamp,\r\n        ...payload,\r\n      },\r\n      {\r\n        headers: { ...this.getAuthorizationHeader() },\r\n      },\r\n    )\r\n      .then(({ data }) => data);\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setBrokerageAccount } from '../../../actions/zenMoney';\r\n\r\nconst mapStateToProps = ({ zenMoney: { accounts, brokerageAccountId } }) => ({\r\n  accounts: accounts.filter(account => (\r\n    account.archive === false && account.type !== 'debt'\r\n  )),\r\n  brokerageAccountId,\r\n});\r\n\r\nconst mapDispatchToProps = { setBrokerageAccount };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps);\r\n","/* @flow */\r\n\r\nimport zenMoney from '../../lib/ZenMoney/instance';\r\nimport * as T from './types';\r\n\r\n// Accounts.\r\nexport const setBrokerageAccount = id => dispatch => {\r\n  dispatch({ payload: id, type: T.BROKERAGE_ACCOUNT_SET });\r\n};\r\n\r\n// Authorization.\r\nexport const fetchTokens = code => dispatch => {\r\n  dispatch({ type: T.TOKENS_REQUESTED });\r\n\r\n  zenMoney.getTokens(code)\r\n    .then(tokens => {\r\n      dispatch({ payload: tokens, type: T.TOKENS_RECEIVED });\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      dispatch({ payload: error.toString(), type: T.TOKENS_FAILED });\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: T.LOGGED_OUT });\r\n};\r\n\r\nexport const setAccessToken = token => dispatch => {\r\n  zenMoney.setAccessToken(token);\r\n  dispatch({ type: T.ACCESS_TOKEN_SET });\r\n};\r\n\r\n// Diff.\r\nexport const fetchDiff = () => (dispatch, getState) => {\r\n  dispatch({ type: T.DIFF_REQUESTED });\r\n\r\n  const currentClientTimestamp = Math.round(Date.now() / 1000);\r\n  const serverTimestamp = getState().zenMoney.diffServerTimestamp;\r\n\r\n  zenMoney.getDiff(currentClientTimestamp, serverTimestamp)\r\n    .then(tokens => {\r\n      dispatch({ payload: tokens, type: T.DIFF_RECEIVED });\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      dispatch({ payload: error.toString(), type: T.DIFF_FAILED });\r\n    });\r\n};\r\n","/* @flow */\r\n\r\n// Accounts.\r\nexport const BROKERAGE_ACCOUNT_SET = 'BROKERAGE_ACCOUNT_SET';\r\n\r\n// Authorization.\r\nexport const ACCESS_TOKEN_SET = 'ACCESS_TOKEN_SET';\r\nexport const LOGGED_OUT = 'LOGGED_OUT';\r\nexport const TOKENS_FAILED = 'TOKENS_FAILED';\r\nexport const TOKENS_RECEIVED = 'TOKENS_RECEIVED';\r\nexport const TOKENS_REQUESTED = 'TOKENS_REQUESTED';\r\n\r\n// Diff.\r\nexport const DIFF_FAILED = 'DIFF_FAILED';\r\nexport const DIFF_RECEIVED = 'DIFF_RECEIVED';\r\nexport const DIFF_REQUESTED = 'DIFF_REQUESTED';\r\n","/* @flow */\r\n\r\nimport AccountsList from './AccountsList';\r\nimport enhance from './AccountsList.enhancer';\r\n\r\nexport default enhance(AccountsList);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst LogoutButton = ({ handleClick }) => (\r\n  <button onClick={handleClick}>Logout</button>\r\n);\r\n\r\nexport default LogoutButton;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, withHandlers } from 'recompose';\r\n\r\nimport { logout } from '../../../actions/zenMoney';\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\nexport default compose(\r\n  connect(null, mapDispatchToProps),\r\n  withHandlers({\r\n\r\n    handleClick: ({ logout }) => () => {\r\n      logout();\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport LogoutButton from './LogoutButton';\r\nimport enhance from './LogoutButton.enhancer';\r\n\r\nexport default enhance(LogoutButton);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport AccountsList from '../AccountsList';\r\nimport LogoutButton from '../LogoutButton';\r\n\r\nconst View = () => (\r\n  <React.Fragment>\r\n    <AccountsList />\r\n    <LogoutButton />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default View;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nconst Authorize = ({ handleAuthorize, progress }) => (\r\n  <div>\r\n    {progress\r\n      ? <span>Progress...</span>\r\n      : <button onClick={handleAuthorize}>Sign in</button>}\r\n  </div>\r\n);\r\n\r\nexport default Authorize;\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle, withState, withHandlers } from 'recompose';\r\n\r\nimport { fetchTokens, setAccessToken } from '../../../actions/zenMoney';\r\nimport zenMoney from '../../../lib/ZenMoney/instance';\r\n\r\nconst mapStateToProps = ({ zenMoney: { accessToken } }) => ({ accessToken });\r\n\r\nconst mapDispatchToProps = { fetchTokens, setAccessToken };\r\n\r\nexport default compose(\r\n  withState('progress', 'updateProgress', false),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const {\r\n        accessToken, fetchTokens, setAccessToken, updateProgress,\r\n      } = this.props;\r\n\r\n      const code = zenMoney.extractAuthorizeCode(window.location);\r\n\r\n      if (accessToken || code) {\r\n        updateProgress(true);\r\n\r\n        if (accessToken) {\r\n          setAccessToken(accessToken);\r\n        } else {\r\n          fetchTokens(code);\r\n        }\r\n      }\r\n    },\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { accessToken, setAccessToken, updateProgress } = this.props;\r\n\r\n      if (accessToken && accessToken !== prevProps.accessToken) {\r\n        updateProgress(true);\r\n        setAccessToken(accessToken);\r\n      }\r\n    },\r\n\r\n  }),\r\n  withHandlers({\r\n\r\n    handleAuthorize: ({ updateProgress }) => () => {\r\n      updateProgress(true);\r\n      window.location = zenMoney.getAuthorizeUrl();\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport Authorize from './Authorize';\r\nimport enhance from './Authorize.enhancer';\r\n\r\nexport default enhance(Authorize);\r\n","/* @flow */\r\n\r\nimport { connect } from 'react-redux';\r\nimport { compose, lifecycle } from 'recompose';\r\n\r\nimport { fetchDiff } from '../../../actions/zenMoney';\r\nimport Authorize from '../Authorize';\r\nimport withAuth from '../../../enhancers/withAuth';\r\n\r\nconst mapDispatchToProps = { fetchDiff };\r\n\r\nexport default compose(\r\n  withAuth(Authorize),\r\n  connect(null, mapDispatchToProps),\r\n  lifecycle({\r\n\r\n    componentDidMount() {\r\n      const { fetchDiff } = this.props;\r\n\r\n      fetchDiff();\r\n    },\r\n\r\n  }),\r\n);\r\n","/* @flow */\r\n\r\nimport View from './View';\r\nimport enhance from './View.enhancer';\r\n\r\nexport default enhance(View);\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\n\r\nimport Portfolio from '../../portfolio/Porfolio';\r\nimport View from '../../zenMoney/View';\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <View />\r\n    <Portfolio />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n","/* @flow */\r\n\r\nimport App from './App';\r\nimport enhance from './App.enhancer';\r\n\r\nexport default enhance(App);\r\n","/* @flow */\r\n\r\nimport * as T from '../../actions/portfolio/types';\r\n\r\nconst initialState = {\r\n  positions: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    case T.POSITION_CLOSED:\r\n      return {\r\n        ...state,\r\n        positions: state.positions.slice().filter(({ id }) => (id !== payload)),\r\n      };\r\n\r\n    case T.POSITION_OPENED:\r\n      return {\r\n        ...state,\r\n        positions: state.positions.slice().concat([payload]),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport {\r\n  isResourceAction, repositoryReducer,\r\n} from 'redux-repository/lib/reducer';\r\nimport { createInitialState } from 'redux-repository/lib/repository';\r\n\r\nimport * as C from '../../constants';\r\n\r\nconst initialState = {\r\n  logos: createInitialState(),\r\n  quotes: createInitialState(),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  if (isResourceAction(C.STOCKS_LOGOS_RESOURCE_NAME, action)) {\r\n    return {\r\n      ...state,\r\n      logos: repositoryReducer(state.logos, action),\r\n    };\r\n  }\r\n\r\n  if (isResourceAction(C.STOCKS_QUOTES_RESOURCE_NAME, action)) {\r\n    return {\r\n      ...state,\r\n      quotes: repositoryReducer(state.quotes, action),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","/* @flow */\r\n\r\nexport default (oldArray, newArray) => {\r\n  if (!oldArray && !newArray) {\r\n    return [];\r\n  }\r\n\r\n  if (!oldArray) {\r\n    return newArray;\r\n  }\r\n\r\n  const array = oldArray.slice();\r\n\r\n  if (!newArray) {\r\n    return array;\r\n  }\r\n\r\n  newArray.forEach(element => {\r\n    const index = array.findIndex(({ id }) => id === element.id);\r\n\r\n    if (index === -1) {\r\n      array.push(element);\r\n    } else {\r\n      array[index] = element;\r\n    }\r\n  });\r\n\r\n  return array;\r\n};\r\n","/* @flow */\r\n\r\nimport * as T from '../../actions/zenMoney/types';\r\nimport mergeEntities from './mergeEntities';\r\n\r\nconst initialState = {\r\n  // Accounts.\r\n  brokerageAccountId: '',\r\n\r\n  // Authorization.\r\n  accessToken: '',\r\n  areTokensRequested: false,\r\n  isAuthorized: false,\r\n  refreshToken: '',\r\n  tokensError: '',\r\n\r\n  // Diff.\r\n  accounts: [],\r\n  diffError: '',\r\n  diffServerTimestamp: 0,\r\n  instruments: [],\r\n  isDiffRequested: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    // Accounts.\r\n    case T.BROKERAGE_ACCOUNT_SET:\r\n      return {\r\n        ...state,\r\n        brokerageAccountId: payload,\r\n      };\r\n\r\n    // Authorization.\r\n    case T.ACCESS_TOKEN_SET:\r\n      return {\r\n        ...state,\r\n        isAuthorized: true,\r\n      };\r\n\r\n    case T.TOKENS_FAILED:\r\n      return {\r\n        ...state,\r\n        accessToken: '',\r\n        areTokensRequested: false,\r\n        isAuthorized: false,\r\n        refreshToken: '',\r\n        tokensError: payload,\r\n      };\r\n\r\n    case T.TOKENS_RECEIVED:\r\n      return {\r\n        ...state,\r\n        accessToken: payload.access_token,\r\n        areTokensRequested: false,\r\n        refreshToken: payload.refresh_token,\r\n        tokensError: '',\r\n      };\r\n\r\n    case T.TOKENS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        areTokensRequested: true,\r\n      };\r\n\r\n    case T.LOGGED_OUT:\r\n      return initialState;\r\n\r\n    // Diff.\r\n    case T.DIFF_FAILED:\r\n      return {\r\n        ...state,\r\n        diffError: payload,\r\n        isDiffRequested: false,\r\n      };\r\n\r\n    case T.DIFF_RECEIVED:\r\n      return {\r\n        ...state,\r\n        accounts: mergeEntities(state.accounts, payload.account),\r\n        diffError: '',\r\n        diffServerTimestamp: payload.serverTimestamp,\r\n        instruments: mergeEntities(state.instruments, payload.instrument),\r\n        isDiffRequested: false,\r\n      };\r\n\r\n    case T.DIFF_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isDiffRequested: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nimport portfolio from './portfolio';\r\nimport stocks from './stocks';\r\nimport zenMoney from './zenMoney';\r\n\r\nexport default combineReducers({\r\n  portfolio,\r\n  stocks,\r\n  zenMoney,\r\n});\r\n","/* @flow */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/app/App';\r\nimport createStore from './lib/store/createStore';\r\nimport reducer from './reducer';\r\nimport mergeReducer from './reducer/mergeReducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst container = document.getElementById('root');\r\nconst store = createStore(reducer, mergeReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  container,\r\n);\r\n\r\nserviceWorker.register();\r\n","/* @flow */\r\n\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport persistState, { mergePersistedState } from 'redux-localstorage';\r\nimport adapter from 'redux-localstorage/lib/adapters/localStorage';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default (rootReducer, mergeReducer) => {\r\n  const reducer = compose(mergePersistedState(mergeReducer))(rootReducer);\r\n\r\n  const middleware = [thunk];\r\n\r\n  const storage = adapter(window.localStorage);\r\n\r\n  const composeEnhancers = (typeof window === 'object'\r\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose);\r\n\r\n  const enhancer = composeEnhancers(\r\n    applyMiddleware(...middleware),\r\n    persistState(storage, process.env.REACT_APP_REDUX_STORAGE_KEY),\r\n  );\r\n\r\n  return createStore(reducer, enhancer);\r\n};\r\n","/* @flow */\r\n\r\nimport _ from 'lodash';\r\n\r\nexport default (initialState, persistedState) => _.merge(\r\n  {},\r\n  initialState,\r\n  persistedState,\r\n  {\r\n    zenMoney: {\r\n      isAuthorized: false,\r\n    },\r\n  },\r\n);\r\n"],"sourceRoot":""}