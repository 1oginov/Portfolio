@startuml

autonumber

actor User
box Firebase
    participant "Web App" as WebApp <<Hosting>>
    database Database <<Firestore>>
    participant "Create Asset" as CreateAsset <<Function>>
end box
participant "External Service" as ExternalService <<Asset Provider>>

User -> WebApp: open new position
alt if asset ID is unavailable
    WebApp -> CreateAsset: send asset external ID and type
    CreateAsset -> Database: validate whether an asset with such\nexternal ID and type don't exist
    alt if asset ID exists
        Database --> CreateAsset: return asset ID
    else otherwise
        Database --> CreateAsset: return not exists
        CreateAsset -> CreateAsset: pick asset provider\nbased on asset type
        CreateAsset -> ExternalService: get asset data by external ID
        ExternalService --> CreateAsset: return asset data
        CreateAsset -> Database: publish new asset data
        Database --> CreateAsset: return asset ID
    end
    CreateAsset --> WebApp: return asset ID
end
WebApp -> Database: publish new position data

Database --> WebApp: update open positions
WebApp --> User: show new position screen

@enduml
