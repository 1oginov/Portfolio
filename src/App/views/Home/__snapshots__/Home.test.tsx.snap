// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot when positions are loading 1`] = `
<Fragment>
  <div
    className="root"
  >
    <Progress />
  </div>
</Fragment>
`;

exports[`matches snapshot with the Closed tab 1`] = `
<Fragment>
  <div
    className="bar"
  >
    <WithStyles(withProps(Totals))
      showClosed={true}
      stockPositions={Array []}
    />
    <WithStyles(ForwardRef(Tabs))
      indicatorColor="primary"
      onChange={[Function]}
      value="closed"
      variant="fullWidth"
    >
      <WithStyles(ForwardRef(Tab))
        label="Summary"
        value="summary"
      />
      <WithStyles(ForwardRef(Tab))
        label="Open"
        value="open"
      />
      <WithStyles(ForwardRef(Tab))
        label="Closed"
        value="closed"
      />
    </WithStyles(ForwardRef(Tabs))>
  </div>
  <div
    className="root"
  >
    <WithStyles(withProps(Connect(withProps(ClosedPositionsList))))
      onPositionClick={[Function]}
      stockPositions={Array []}
    />
  </div>
</Fragment>
`;

exports[`matches snapshot with the Open tab 1`] = `
<Fragment>
  <div
    className="bar"
  >
    <WithStyles(withProps(Totals))
      showClosed={false}
      stockPositions={Array []}
    />
    <WithStyles(ForwardRef(Tabs))
      indicatorColor="primary"
      onChange={[Function]}
      value="open"
      variant="fullWidth"
    >
      <WithStyles(ForwardRef(Tab))
        label="Summary"
        value="summary"
      />
      <WithStyles(ForwardRef(Tab))
        label="Open"
        value="open"
      />
      <WithStyles(ForwardRef(Tab))
        label="Closed"
        value="closed"
      />
    </WithStyles(ForwardRef(Tabs))>
  </div>
  <div
    className="root"
  >
    <WithStyles(withProps(Connect(withProps(OpenPositionsList))))
      onPositionClick={[Function]}
      stockPositions={Array []}
    />
  </div>
</Fragment>
`;

exports[`matches snapshot with the Summary tab 1`] = `
<Fragment>
  <div
    className="bar"
  >
    <WithStyles(withProps(Totals))
      showClosed={false}
      stockPositions={Array []}
    />
    <WithStyles(ForwardRef(Tabs))
      indicatorColor="primary"
      onChange={[Function]}
      value="summary"
      variant="fullWidth"
    >
      <WithStyles(ForwardRef(Tab))
        label="Summary"
        value="summary"
      />
      <WithStyles(ForwardRef(Tab))
        label="Open"
        value="open"
      />
      <WithStyles(ForwardRef(Tab))
        label="Closed"
        value="closed"
      />
    </WithStyles(ForwardRef(Tabs))>
  </div>
  <div
    className="root"
  >
    <WithStyles(withProps(withProps(Connect(withProps(OpenPositionsSummariesList)))))
      stockPositions={Array []}
    />
  </div>
</Fragment>
`;
